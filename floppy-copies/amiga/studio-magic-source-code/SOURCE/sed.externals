/* all the global variables */
extern short kk;
extern long preserve_begsamp,preserve_endsamp,preserve_nsamps;
extern short num,num2,div;
extern int sr;
extern int sr_key;
extern struct timerequest tr;
extern struct Remember *RememberKey;
extern struct FileLock *mylock,*oldlock,*thelock;
extern int well,nfiles;
extern short fake_rate;
extern char tempc;
extern int IntJunk;
extern float fac;
extern char midi_testify;
extern char FileNameStr[62];
extern char OutStr[81];
extern char mycurdir[67]; 
extern char thedir[67];
extern char SPrintStr[62];
extern char DiskName[25];
extern short curdev;
extern char default_unit[12];
extern struct Gadget AGadget;
extern int f;
extern char SpaceStr[50];
extern short tempo;
extern char midi_record_flag;
extern char ext_clock_flag;
extern char ext_wait_flag;
extern long ext_clock;
extern char midi_playback_flag;
extern char midi_repeat_flag;
extern char midi_overdub_flag;
extern char midi_echo_flag;
extern short n_midi_events;
extern short n_play_events;
extern short n_midi_echoes;
extern short echo_decay;
extern int midi_echo_delay;
extern long start_sec,start_mic,now;
extern short this_event;
#define EXT_START 250
#define EXT_CLOCK 248
#define EXT_STOP 252
#define EXT_CONT 251
#define UNDO_MENU_NUMBER (0+1) 
/* i know it's a no-no */

#define MAXMIDIEVENTS 900
typedef struct event {
	unsigned char what1;
	unsigned char what2;
	unsigned char what3;
	unsigned char voice;
	long when;
	};
extern struct event event[MAXMIDIEVENTS+1];
#define MAXTABLESIZE 1000
extern int table[MAXTABLESIZE];
#define MAXFILTER 1000
extern char filter[MAXFILTER];
typedef struct {
	float re;
	float im;
	} complex;

#define MAXFFTPOINTS 512
extern complex ss[MAXFFTPOINTS];

/* end of file_choose stuff */
extern short bendmsb,bendlsb;
extern int channels;
extern short velocity_flag,midi_format_flag;
extern char vel_vol[128];
extern short stereo_flag;
extern long stereo_offset;
extern struct AudChannel aud[];
extern short show_sect;
extern short current_buffer;
extern short current_hist;
extern short copy_buffer;
extern struct IntuiMessage *NewMessage;
#define MAXSER 5
#define MAXSECT 16
#define MAXSECTGAD 8
#define MAXNAME 10
extern struct IOExtSer IORser,TempIORser[MAXSER];
extern short nser;
extern struct MsgPort *port;

#define KEY_X 310
#define KEY_Y 175
#define KEY_WIDTH 3
#define KEY_HEIGHT 12
	

extern short period[MAXSECT][100];
extern short used[4];
extern long loopcom[4];
extern int bendrange;
extern int command;
extern int comvolume;
extern long comdata,comlength;
extern short ncycles;
extern short tempvoice;
extern unsigned char note_channel[MAXSECT][100];
extern short key_section[100];
extern short key_split_flag;
extern short done;
extern short oldpitch[3];

struct section
   {
   int firstsamp,lastsamp;
   int loopstart,loopend;   
   int flags;
   int frsize;
   int currbuf;   
   struct IntuiText *text;
   char name[MAXNAME];
   };
extern struct IntuiText FNText;
extern struct IntuiText DiskText[5];
extern struct IntuiText MiscText[5];
extern struct IntuiText MidText[5];
extern struct section section[MAXSECT];
extern struct section section_defaults;
extern struct Gadget SectNameGadget[MAXSECTGAD];
extern unsigned char midi[256];
extern char RString[41];
extern char UrString[41];
extern struct MsgPort *CreatePort();

#define INTUITION_REV 0
#define GRAPHICS_REV 0
#define WHITE 1
#define BLUE 0
#define BLACK 2
#define YELLOW 3
#define NOTE_ON 144
#define NOTE_OFF 128
#define VOICE_CHANGE 192
#define PITCH_BEND 224
#define PLOT_WIDTH 60
#define LOOP_FLAG 1
#define SPLIT_FLAG 2
#define STEREO_ON_FLAG 4
#define AM_FLAG 8
#define SUSTAIN_FLAG 16

extern struct IntuiMessage *message;
extern struct Library *OpenLibrary();
extern struct Task *FindTask();
/* channel allocation map */

extern struct RastPort *rastPort;
extern struct Library *MathBase;
extern struct IntuitionBase *IntuitionBase;
extern struct GfxBase *GfxBase;
extern struct NewWindow NewWindow;
extern struct Window *Window;

extern struct MsgPort *allocPort;
extern struct IOAudio *allocIOB[4];
extern struct Device *device;
extern struct Interrupt *interrupt;
extern struct MsgPort *soundPort;
extern BYTE *buffer,*buffer0,*buffer1,*orig,*dest,*undo_buffer;
#define MAXCOM 30
extern int curcom;
extern struct IOAudio *audcom[MAXCOM];
extern unsigned char fn[40];
extern char TempStr[20];
extern ULONG bufsiz;



extern struct Image Slider;
extern struct PropInfo PerInfo;
extern struct Gadget PerGadget;
extern struct IntuiText TText;
extern struct IntuiText MText;
extern struct Requester StringRequest;
extern struct Requester SliderRequest;
extern struct Requester PostIt;
extern struct IntuiText ReqText;
extern struct IntuiText PostItText;
extern struct Image LimitImage[7];
extern struct PropInfo LimitInfo[7];
extern struct Image DoneImage;
extern struct Gadget DoneGadget;
extern struct IntuiText DoneText;
extern struct Gadget LimitGadget[7];
extern struct Image PlayImage;
extern struct Gadget PlayGadget;
extern struct IntuiText PlayText;
extern struct Image SetImage;
extern struct Gadget SetGadget;
extern struct IntuiText SetText;
extern struct Image LoopImage;
extern struct Gadget LoopGadget;
extern struct IntuiText LoopText;
extern struct Image StopImage;
extern struct Gadget StopGadget;
extern struct IntuiText StopText;
/* extern struct Image GravyImage;
extern struct Gadget GravyGadget;
extern struct IntuiText GravyText; */
extern struct Image QuitImage;
extern struct Gadget QuitGadget;
extern struct IntuiText QuitText;
extern struct Image TuneImage;
extern struct Gadget TuneGadget;
extern struct IntuiText TuneText;
extern struct Image SectionImage[8];
extern struct Gadget SectionGadget[8];
extern struct IntuiText SectionText[8];
extern struct IntuiText TempMeterText;
extern struct IntuiText FrsizeText;
extern struct IntuiText DurationText;
extern struct IntuiText PerText;
extern struct IntuiText ValueText;
extern struct IntuiText BodyText;
extern struct IntuiText PosText;
extern struct IntuiText NegText;
extern struct Image Button;
extern struct Gadget BTempGadget;
extern long m;
extern struct Message *latest_msg;
extern int maxamp;
extern float rescale,xmult,feedback;
extern int section_x;
 extern int section_y;
extern int begsamp_x;
extern int begsamp_y;
extern int endsamp_x;
extern int endsamp_y;
extern int frsize_x;
extern int frsize_y;
extern int gduration_x;
extern int gduration_y;
extern int duration_x;
extern int duration_y;
extern int per_x;
extern int per_y;
extern int midi_data,midi_read,midi_status,midi_pitch,midi_volume,midi_voice;
extern int midi_channel,in_channel;
extern int midi_flag;

extern long nsamps,begsamp,endsamp,tempsamp;
extern long bs0,es0,bs1,es1;
extern long int nsamps0,nsamps1;
extern long int frinc,frsize,frstart;
extern int frmax,durmax;
extern double gduration,duration,tic;
extern int n,i;
extern int reqflag;
extern short nvoice;
extern int pper,midpper;
extern int filenum;
extern FILE *fp;
extern char c;
extern ULONG class;
extern USHORT code;
extern APTR address;
extern SHORT moux,mouy;
extern long LongJunk;
extern float FloatJunk,durmult,tune_constant;
extern int nsections;
extern int current_section;
extern int nbytes;
extern int error;
extern int actual;
extern short lastmoved,lastbuffer;
extern char lastbeg;
extern short lastlastmoved;
extern long l,paste_start,paste_end,copy_start,copy_end,dif;
extern int MenuNumber;
extern int ItemNumber;
extern unsigned long rbl;
extern unsigned long brk;
extern unsigned long baud;
extern unsigned char rwl;
extern unsigned char wwl;
extern unsigned char sf;
extern unsigned long t0;
extern unsigned long t1;
extern int tlength;
extern int k;
extern int nsects;
