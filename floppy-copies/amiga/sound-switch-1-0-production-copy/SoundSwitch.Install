; $VER: SoundSwitch.Install 1.0 (6.7.94)
; Installer script for installing SoundSwitch 1.0
;
; USAGE: Installer SoundSwitch.Install
;

(complete 0)

;=============================================================================
; the name of the disk
(set #ss-disk-name "SoundSwitch")

;=============================================================================
; some other handy names
(set #ss-app-name  "SoundSwitch 1.0")
(set #ss-base-name "SoundSwitch")

(set #s16-app-name  "SoundSwitch-Studio16")
(set #s16-base-name "Studio16_3")
(set #s16-base-dir  "Studio16_3:")
(set #s16-orig-base-name "Studio16")

;=============================================================================
; English strings

(if (= @language "english")
(
(set #bad-kick
(cat "You must be using Kickstart 2.04 (V37) or higher to install " #s16-app-name
))

(set #bad-wb
(cat "You must be using Workbench 2.04 (V37) or higher to install " #s16-app-name
))

(set #bad-iffp
(cat "Cannot find \"iffparse.library\" V37 or higher.\n\n"
		#bad-wb
))

(set	#ask-install-options
(cat	"The SoundSwitch software consists of two parts:   \n"
		"o Video Toaster Link - a program to integrate the \n"
		"  SoundSwitch and the Video Toaster 2.0 or higher.\n"
		"o Studio 16 Software Modules                      \n\n"
		"Which would you like to install?\n"
))

(set	#ask-install-options-help
(cat	"Select the checkboxes for the items you wish installed.  "
		"Then select \"Proceed\"..."
))

(set	#ask-install-choice-1	"Video Toaster Link")
(set	#ask-install-choice-2	"Studio 16 Modules")


(set #confirm-target
(cat "\n" #s16-app-name " appears to already be installed in \"%s\".\n\n"
     #s16-app-name " will now be installed on your hard drive.\n"
     "The previous version already present will be replaced.  If applicable, "
     "certain files from previous releases will be deleted.\n\n"
     "Are you sure you want " #s16-app-name " installed in the \"%s\" drawer?"
))

(set #confirm-target-help
(cat "\nThe installer has determined that you may already have the " #s16-app-name " "
     "software installed on your system.  If this is wrong or you want "
     "to install the new " #s16-app-name " software elsewhere, select \"NO\".\n\n"
     "If you want to proceed with the installation in \"%s\", select "
     "\"YES\".  Proceeding with the installation will cause any " #s16-app-name " "
     "files in this drawer to be replaced with newer files.\n\n"
     "WARNING!: OBSOLETE FILES WILL BE DELETED."
))

(set #confirm-copy-s16-libs
(cat "Copying new version of %s to your " #s16-base-dir "LIBS drawer."
))

(set #confirm-copy-s16-libs-help
(cat @copylib-help
))

(set #confirm-copy-libs
(cat "Copying new version of %s to your %s drawer."
))

(set #confirm-copy-libs-help
(cat @copylib-help
))



(set #which-s16-disk
(cat "Where should " #s16-app-name " be installed?\n"
     "(A new \"" #s16-base-name "\" drawer will be created)"
))

(set #which-s16-disk-help
(cat "\nThis section lets you choose on which hard drive partition the "
     #s16-app-name " files will be installed.  These should normally go "
	  "in the same location as the current " #s16-app-name " files.\n\n"
     @askdir-help
))


(set #which-toaster
(cat "Where should the SoundSwitch-Link be installed?\n"
     "(Should be the same location as the Toaster software.)"
))

(set #which-toaster-help
(cat "\nThis section lets you choose on which hard drive partition the "
     "SoundSwitch Video Toaster Link files will be installed.\n"
     "These should normally go in the same location as the Video Toaster "
     "program files.\n\n"
     @askdir-help
))

(set #bad-toaster-target
(cat "Unable to locate VideoToaster software in this drawer.\n"
     "Please select the drawer containing the Toaster software."
))

(set #bad-wedge
(cat "Unable to locate StartToaster icon or "
     "Video Toaster specific Startup-Sequence."
))


(set #ask-disk
(cat "\n\nPlease insert the \"%s\" disk in any floppy drive."
))

(set #msg-send-reg-card
(cat	"\nNow would be a good time to fill out your registration card.  "
		"This form must be mailed to receive software updates and technical support."
))

(set #working-s16-copyfiles
(cat "\n\nInstalling " #s16-app-name " files..."
))

(set #working-startup
(cat "\n\nUpdating S:User-Startup..."
))

(set #startup-assign
(cat "Assign " #s16-base-dir " \"%s\"\n"
))

(set #startup-s16
(cat "\n\nThe following lines need to be added to your User-Startup file:\n\n"
     #startup-assign
))

(set #all-done
(cat "\n" #ss-app-name " Installation completed."
))

))


;=============================================================================
; procedure to call on exit...

(procedure TERMINATE
   (makeassign "SSW")
)

;=============================================================================
; termination stuff

(onerror (TERMINATE))


;=============================================================================
; do a bit of set up...

(delopts "oknodelete" "force" "askuser")

;=============================================================================
; ask for Disk 1

(askdisk	(prompt	(#ask-disk #ss-disk-name))
			(help		@askdisk-help)
			(dest		#ss-disk-name)
			(newname	"SSW")
)

;--- preset the installation options...
;
(if (< (shiftright (getversion) 16) 37)
(
	(set install-options 0)
)
;else
(
	(set install-options 2)
))

;============================================================================
; First let's look around and see what we can see...
;
; We may find the toaster and Studio 16 homes.
;

;--- Make sure we have an ENV: for environment variables...
;
(if (= (exists "ENV:") 0)
(
	(makedir "RAM:ENV" (safe))
	(makeassign "ENV" "RAM:ENV" (safe))
))

(run ("UnSetEnv ToastHome") (safe))

(if (= (run ("SSW:FindToaster ENVNAME ToastHome") (safe)) 0)
(
	(set toast-home (getenv "ToastHome"))
	(if toast-home
	(
		(set install-options (BITOR install-options 1))
	))
))

(run ("UnSetEnv ToastHome") (safe))

(set s16-home (getassign #s16-base-name "a"))

(if s16-home
(
	(set s16-home (pathonly s16-home))
))

; pre-set the default target directory...
;
(set target @default-dest)

;=============================================================================
; Greetings...

(welcome)
(set old_level @user-level)

; We really want the questions to be asked...
(user 2)

(set install-options (askoptions	(prompt	#ask-install-options)
											(help		#ask-install-options-help)
											(choices	#ask-install-choice-1 #ask-install-choice-2)
											(default	install-options)
							 )
)

;=============================================================================
; Now show the reg-card message and eventually collect the serial number

(message #msg-send-reg-card)

(user old_level)

;=============================================================================
; Handle the SoundSwitch-Link Installation...

(if (BITAND install-options %00000001)
(
	;=========================================================================
	; get target drawer where SoundSwitch-Link is to be installed
	(if toast-home
	(
		(set target toast-home)
	)
;	else
	(
		; We really want the questions to be asked...
		(user 2)

		(set ask_again TRUE)

		(while (= ask_again TRUE)
		(
			(set target	(askdir	(prompt	#which-toaster)
										(help		#which-toaster-help)
										(default	@default-dest)
							)
			)

			; check if the user picked a drawer that contains "VideoToaster"
			;
			(if (exists (tackon target "VideoToaster"))
			(
				(set ask_again FALSE)
			)
;			else
			(if (exists (tackon target "Switcher"))
			(
				(set ask_again FALSE)
			)
;			else
			(
				(message	#bad-toaster-target)
			)))
		))

		(user old_level)
	))

	(set @default-dest target)

	;=============================================================================
	; Now do the toaster patch installation...

	(working #working-copyfiles)

	(copyfiles	(source	"SSW:Toaster/SoundSwitch")
					(dest		target)
					(infos)
	)

	(copyfiles	(source	"SSW:Toaster/StartSoundSwitch")
					(dest		target)
	)

	(if (< (shiftright (getversion) 16) 37)
	(
		;--- We are pre-Release 2, so copy the library to LIBS: (YUCK!)
		;
		(copylib		(prompt	(#confirm-copy-libs "soundswitch.library" target))
						(help		#confirm-copy-libs-help)
						(source	"SSW:Toaster/soundswitch.library")
						(dest		"LIBS:")
		)
	)
;	else
	(
		;--- We are Release 2 or later, so copy the library to here!
		;
		(copylib		(prompt	(#confirm-copy-libs "soundswitch.library" target))
						(help		#confirm-copy-libs-help)
						(source	"SSW:Toaster/soundswitch.library")
						(dest		target)
		)
	))

	(run ("UnSetEnv WedgeResult") (safe))
	(if (= (run ("SSW:WedgeSST ENVNAME WedgeResult TARGET %s" target)) 0)
	(
		(set wedge-result (getenv "WedgeResult"))
		(if (= wedge-result "1") 
		(
			(message #bad-wedge)
		))
	))
	(run ("UnSetEnv WedgeResult") (safe))
))


;=============================================================================
; Handle the Studio 16 Installation...

(if (BITAND install-options %00000010)
(
	;=========================================================================
	; make sure we are running under V37 or higher...

	(if (< (shiftright (getversion) 16) 37)
	(
	    (abort #bad-kick)
	))

	(if (< (shiftright (getversion "LIBS:version.library") 16) 37)
	(
	    (abort #bad-wb)
	))

	(if (< (shiftright (getversion "LIBS:iffparse.library") 16) 37)
	(
	    (abort #bad-iffp)
	))

	;=========================================================================
	; get target drawer where SoundSwitch-Studio16 is to be installed

	; We really want the questions to be asked...
	(user 2)

	(if s16-home
	(
		(set target s16-home)
	)
;	else
	(
		(set target (pathonly target))
	))

	(set ask_again TRUE)

	(while (= ask_again TRUE)
	(
		(set ask_again FALSE)
		(set virgin_install TRUE)

		(set target	(askdir	(prompt	#which-s16-disk)
									(help		#which-s16-disk-help)
									(default	target)
						)
		)

		; check if the user picked a "Studio16_3" drawer by accident.
		;
		(if (patmatch #s16-base-name (fileonly target))
		(
			(set target (pathonly target))
		)
;		else
		(
			; check if the user picked a "Studio16" drawer by accident.
			;
			(if (patmatch #s16-orig-base-name (fileonly target))
			(
				(set target (pathonly target))
			))
		))

		(if (exists (tackon target #s16-base-name))
		(
			(set virgin_install FALSE)

			(if	(not	(askbool	(prompt	(#confirm-target target target))
										(help		(#confirm-target-help target))
										(default	1)
							)
					)
			(
				(set ask_again TRUE)
			))
		)
;		else
		(
			(makedir	(tackon target #s16-base-name) (infos))
		))
	))

	(user old_level)

	(set target (tackon target #s16-base-name))
	(set @default-dest target)

	;=========================================================================
	; Do the installation...

	(if (= virgin_install TRUE)
	(
		; handle a virgin installation

		(working #working-s16-copyfiles)

		(copyfiles	(source	"SSW:Studio16")
						(dest		target)
						(all)
		)

		(copyfiles	(source	"SSW:Studio16.info")
						(dest		(pathonly target))
						(newname	(cat #s16-base-name ".info"))
		)

		(tooltype	(dest		(tackon (pathonly target) #s16-base-name))
						(noposition)
		)

		(copyfiles	(source	"SSW:Read_Me")
						(dest		target)
						(infos)
		)

		; Install the "soundswitch.library"

		(copylib		(prompt	(#confirm-copy-s16-libs "soundswitch.library"))
						(help		#confirm-copy-s16-libs-help)
						(source	"SSW:Toaster/soundswitch.library")
						(dest		(tackon target "LIBS"))
						(confirm)
		)

		; Copy SoundSwitchHandler to Drivers drawer...

		(copyfiles	(source	(tackon target "Dormant/SoundSwitchHandler"))
						(dest		(tackon target "Drivers"))
						(infos)
		)

		(complete 60)

		;======================================================================
		; update startup-sequence

		(working #working-startup)

		(startup @app-name	(prompt	(#startup-s16 ("%s" target) start-options))
									(help		@startup-help)
									(command (#startup-assign target))
		)
	)
	;else
	(
		; handle an existing installation

		(working #working-s16-copyfiles)

		; Install the new Mixer

		(copyfiles	(source	"SSW:Studio16/Apps/Mixer")
						(dest		(tackon target "Apps"))
						(infos)
		)

		; Install the SoundSwitchHandler

		(copyfiles	(source	"SSW:Studio16/Dormant/SoundSwitchHandler")
						(dest		(tackon target "Drivers"))
						(infos)
		)

		; Install the "soundswitch.library"

		(copylib		(prompt	(#confirm-copy-s16-libs "soundswitch.library"))
						(help		#confirm-copy-s16-libs-help)
						(source	"SSW:Toaster/soundswitch.library")
						(dest		(tackon target "LIBS"))
						(confirm)
		)

		; Only update the other libraries if we need to...

		(copylib		(prompt	(#confirm-copy-s16-libs "studio.library"))
						(help		#confirm-copy-s16-libs-help)
						(source	"SSW:Studio16/LIBS/studio.library")
						(dest		(tackon target "LIBS"))
						(confirm)
		)

		(copylib		(prompt	(#confirm-copy-s16-libs "gadlib.library"))
						(help		#confirm-copy-s16-libs-help)
						(source	"SSW:Studio16/LIBS/gadlib.library")
						(dest		(tackon target "LIBS"))
						(confirm)
		)

		(copylib		(prompt	(#confirm-copy-s16-libs "Interface.library"))
						(help		#confirm-copy-s16-libs-help)
						(source	"SSW:Studio16/LIBS/Interface.library")
						(dest		(tackon target "LIBS"))
						(confirm)
		)

	))

	; Make the assignment so the user doesn't have to reboot...
	;
	(makeassign #s16-base-name target)

	(complete 75)
))

(run "avail flush")

(complete 100)

;=============================================================================
; "END OF LINE."
;
(TERMINATE)

(exit #all-done)

