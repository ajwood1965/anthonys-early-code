##base StudioBase *the name of our base used by C glue code and C PRAGMAS
##name studio     *the name of our library 
##vers 1          *version #
##revs 0          *revision #
##libid  Studio 16 library © 1991 SunRize Industries
##bias 30         *first function is always at an offset of -30 from lib base
##init InitStudioLib
##expu RemStudioLib
*Here are all of the lib functions callable by an application
##ret void
ASStop(as)
ASTrigger(as)
AttachWorkingFiles()
BroadcastEventParms(type, arg1, arg2, arg3, arg4, arg5, flags)
BroadcastEventParmsLessOne(type, thismod, arg1, arg2, arg3, arg4, arg5, flags)
ClearNotifyList(type)
DeleteSample(s)
DeleteModule(m)
DeleteModState(s)
DeleteAudioHandler(ah)
DeleteFileFilter(ff)
DeleteWorkingFile(samp)
FreeChan(key)
IgnoreEvent(type, module)
IgnoreCount(type, module)
InitSharedSemaphore(ss)
LoadDefaults(file)
NotifyMeOnEvent(type, module)
NotifyMeOnCount(type, module)
ObtainExclusiveSemaphore(ss)
ObtainSharedSemaphore(ss)
ReleaseSharedSemaphore(ss)
ReleaseExclusiveSemaphore(ss)
RestoreWindowParms(m,nw)
SampleSetLength(sp)
SaveDefaults(file)
SendMsg(module, type, arg1, arg2, arg3, arg4, arg5, flags)
SetOriginalDefaults()
UpdateStandardModState(m,w)
WaitUntilListening(type, mod)
##ret struct Module *
AddModule(nm)
FindModule(name)
##ret struct StandardModState *
AddModState(name,state_size)
FindModState(name)
##ret struct Disk_Samp *
FindSample(name)
GetSamplePtr(i)
##ret struct ChanKey *
AllocChan(ah, cn)
##ret struct AudioHandler *
AddAudioHandler(nh)
FindAudioHandler(last_han, flags, num_bits, name)
##ret int
ASClose(as)
ASRead(as)
ASWrite(as)
CreateSample(name, version, ptrptr)
CloseSample(ptr)
GetEventID(name)
GetSampleNum(s)
IsRenamePossible(path,name,saveing)
LoadModule(name)
LoadModState(file)
LoadSamp(path, fname, sampname)
QuickSaveSamp(path,name,samp)
QuickLoadSamp(path,fname,sampname)
RenameTempFile(path,name,samp,saveing)
SClose(fileptr)
SOpen(name, mode)
SRead(fileptr, buffer, length)
SReadTag(fileptr, tag)
SSeek(fileptr, position, mode)
SWrite(fileptr, buffer, length)
SWriteTag(fileptr, tag)
SampleRead(sp, buffer, length)
SampleReadTag(sp)
SampleSeek(sp, rpos, mode)
SampleWrite(sp, buffer, length)
SampleWriteTag(sp)
SampleClose(sp)
SampleCopy(tosp, fromsp, length)
StandardEnviroment()
SaveModState(file)
SaveSamp(path, fname, samp, ff)
WorkingFilePath(name,version,buf,size)
##ret short
SampleGetOne(sp, i)
##ret struct FileFilter *
AddFileFilter(nff)
##ret struct SampleFilePointer *
SampleCreate(name)
SampleOpen(ptr, flags)
##ret struct ActiveSample *
ASOpen(region, flags)
##ret struct SampleFilePointer *
SampleCreateRevision(sampptr)
##ret struct TimeCode
AddTimeCode(tc1,tc2,type)
SubTimeCode(tc1,tc2,type)
IncTimeCode(tc1,tc2,type)
QuerySmpteTime()
##ret int
TestTimeCode(tc,type)
##ret struct SmpteSink
AddSmpteSink(ns)
##ret struct SmpteSource
SetSmpteSource(name,unit)
AddSmpteSource(ns)
##ret void
DeleteSmpteSource(ss)
DeleteSmpteSink(ss)
InjectTimeCode(src,now)
InjectTimeCodeError(src, error)
##ret int
ASHandlerQueryRecordData(as, len, actual_len, data)
ASHandlerQueryPlayData(as, len, actual_len, data)
##ret void
ASWaitStop()
ASQueueReads(as, num)
##ret int
ASFlush(as, keep)
ASPos(as)
ASSeek(as, numsamps, mode)
InitStudio16UserEnv(flags, myscreen, mybackwin)
ASCountBlocks(as, flags)
##end
