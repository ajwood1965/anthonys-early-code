This File Documents all the AREXX commands available in Studio16.
Also view the file S16Examp.rx  for a working example program!

/*************************************************************************/
/*************************************************************************/


/**************************************************************************
'S16Version' - Studio 16/Rex Version    

DESCRIPTION:
        This function is used to determine the version of Studio16 and the
        version of the Studio16 AREXX port.

PARAMETERS:
        NONE                                

RESULTS:
        Version String 'Studio 16 Vers X.XX, Arexx Port Vers X.XX'
                                               
EXAMPLE:                                   
        options results
        S16Version                            
        say 'You are using ' result         
**************************************************************************/

/**************************************************************************
'S16ToFront' - Studio Screen To Front   

DESCRIPTION:
        This function places the Studio16 screen on top of all others.
        It preforms the same function as as the screens depth gadget.

PARAMETERS:
        NONE

RESULTS:
        NONE

EXAMPLE:
        S16ToFront
**************************************************************************/

/**************************************************************************
'S16ToBack' - Studio Screen To Back    

DESCRIPTION:
        This function places the Studio16 screen behind all others.
        It preforms the same function as as the screens depth gadget.

PARAMETERS:
        NONE 

RESULTS:
        NONE

EXAMPLE:
        S16ToBack
**************************************************************************/

/**************************************************************************
'S16QuerySmpteTime' - Current Smpte Time   

DESCRIPTION:
        This function returns the current SMPTE time in string format.
        
PARAMETERS:
        NONE

RESULTS:
        TimeCodeString 

EXAMPLE:
        S16QuerySmpteTime
        say 'Current Smpte Time is: ' result
**************************************************************************/

/**************************************************************************
'S16WaitTimeCode' - Wait For Time Code 

DESCRIPTION:
        This function waits for a particular SMPTE Time Code.  When the
        Time is reached or exceeded, execution continues on the next
        AREXX command.

PARAMETERS:
        TimeCode String

RESULTS:
        0 if time found
        6 (RX_ER_TIME_CODE_PAST) if time code past

EXAMPLE:
        S16WaitTimeCode '00:00:10:00'
        S16Play 'Audio:Sample'
**************************************************************************/

/**************************************************************************
'S16WaitGPI' - Studio Wait GPI       

DESCRIPTION:
        This function Waits until a GPI Trigger occurs.

PARAMETERS:
        NONE

RESULTS:
        NONE

NOTE:   GPI is the joystick button (as used by the Video Toaster)

EXAMPLE:
        S16WaitGPI
        S16Play 'Audio:Sample'
**************************************************************************/

/**************************************************************************
'S16Rate' - Changing Sampling Rate,  

DESCRIPTION:
        This function alters the sampling rate.  It should be used before
        you record a sample, since you are not assured of a particular
        startup sampling rate.

PARAMETERS:
        Desired Sampling Rate (samp/sec)
RESULTS:
        Actual Rate (samp/sec)

EXAMPLE:
        S16Rate 44100
        say 'Actual Sampling Rate: ' result 'samps/sec'

EXAMPLE2: (TRY ALL RATES)
        rate=100000
        S16Rate rate
        LastRate=result
        do while (rate > LastRate)
        	rate=LastRate-1
        	S16Rate rate
        	LastRate=result
        end
**************************************************************************/

/**************************************************************************
'S16Filter' - Changing Filter Cutoff,  

DESCRIPTION:
        This function alters the filter cutoff value of cards with this
        capability (currently just the AD1012).

PARAMETERS:
        Desired Filter Cutoff (Hz)

RESULTS:
        Actual Filter Cutoff (Hz)

EXAMPLE:
        S16Filter 20000
        say 'Actual Filter Cutoff: ' result 'Hz'

EXAMPLE2: (Try every filter)
        filt=100000
        S16Filter filt
        Lastfilt=result
        do while (filt > Lastfilt)
        	filt=Lastfilt-1
        	S16Filter filt
        	Lastfilt=result
        end
**************************************************************************/

/**************************************************************************
'S16Gain' - Changing Input Gain,   

DESCRIPTION:
        This function alters a cards input gain, provided the card
        supports this kind of parameter.

PARAMETERS:
        Desired Gain (dBs)
RESULTS:
        Actual Gain String (dBs)

EXAMPLE:
        S16Gain 106
        say 'Actual Gain: ' result 'dBs'
**************************************************************************/

/**************************************************************************
'S16Pan' - Changing a Channel Pan   

DESCRIPTION:
        This fuction alters the pan of a sample that is already
        playing back.

PARAMETERS:
        Type Of Channel   (EG. 'CHAN_INPUT' 'CHAN_PLAY' or 'CHAN_OUTPUT')
        Channel Number
        Desired Pan (dBs)

RESULTS:
        Actual Pan (dBs)

NOTE:
        Pan full Left=0, Center=100, full Right=200

EXAMPLE:
        S16Pan CHAN_PLAY 1 000            ! Full Left
        say 'Actual Pan: ' result 'dBs'

        S16Pan CHAN_PLAY 2 100            ! Center
        S16Pan CHAN_PLAY 3 200            ! Full Right
        S16Pan CHAN_PLAY 4 106            ! 6dBs to Right
**************************************************************************/

/**************************************************************************
'S16ChanVol' - Changing Channel Volume   

DESCRIPTION:
        This fuction alters the volume of a sample that is already
        playing back.        

PARAMETERS:
        Type Of Channel   (EG. 'CHAN_INPUT' 'CHAN_PLAY' or 'CHAN_OUTPUT')
        Channel Number
        Channel Value     (dBs) - 100

RESULTS:
        Actual Volume (dBs)

NOTE:
        Off=0   0dBs=100   6dBs=106   -6dBs=94
        Actual dBs = param - 100

EXAMPLE:
        S16ChanVol CHAN_OUTPUT 1 100
        say 'Actual Channel Volume: ' result 'dBs'

        S16ChanVol CHAN_PLAY   1 106            !   6dBs
        S16ChanVol CHAN_INPUT  1 100            !   0dBs
        S16ChanVol CHAN_PLAY   2 94             !  -6dBs
        S16ChanVol CHAN_PLAY   3 88             ! -12dBs
        S16ChanVol CHAN_PLAY   4 00             ! -OOdBs
**************************************************************************/

/**************************************************************************
'S16Play' - Play Sample  

DESCRIPTION:
        A simple way of playing back audio from a studio 16 card.
        No open closes or triggers are needed.  This function returns 
        after the sample finishes playback.

NOTE:
        This function returns after the sample has finished

PARAMETERS:
        Complete Sample Path string

RESULTS:
        NONE

EXAMPLE:
        S16Play 'toddaudio:11_Intro'
**************************************************************************/

/**************************************************************************
'S16StopAllPlayback' - Stop All Playback    

DESCRIPTION:
        This function stops all audio Playback.  S16Closes are still
        required for all samples that are S16Opened.

PARAMETERS:
        NONE

RESULTS:
        NONE

EXAMPLE:
        S16StopAllPlayback
**************************************************************************/

/**************************************************************************
'S16Exit' - Exit Studio 16 Program

DESCRIPTION:
        Use this as the last Studio16 AREXX command, ALWAYS.

PARAMETERS:
        NONE

RESULTS:
        NONE

EXAMPLE:
        S16Exit
**************************************************************************/


/**************************************************************************
'S16Open' - Open a Sample File

DESCRIPTION:
        This function opens a sample for playback, and preloads the sample.
        This function returns as soon as the sample is preloaded.  The 
        sample must still be triggered to start playback, and closed.

PARAMETERS:
        Complete Sample FileName String.

RESULTS:
        key - a unique value used to identify the sample

EXAMPLE:
        S16Open 'Audio:Sample'
        key=result
        S16Trigger key
        S16Close key
**************************************************************************/

/**************************************************************************
'S16OpenRecord' - Open a Sample for Record

DESCRIPTION:
        This function opens a sample for recording.  The samples must
        then be triggered, to start the record, and then closed, to stop
        recording.

PARAMETERS:
        Complete Sample FileName String.

RESULTS:
        key - a unique value used to identify the sample

EXAMPLE:
        S16OpenRecord 'Ram:Number9'
        key=result

        S16Trigger key

        S16WaitGPI
        S16Close key
**************************************************************************/

/**************************************************************************
'S16OpenRecordOutput' - Open a Sample for Record PingPong

DESCRIPTION:
        This function opens a sample for recording.  The samples must
        then be triggered, to start the record, and then closed, to stop
        recording.  This type of record is used to record the output of
        the card, this is useful for ping-ponging samples.

PARAMETERS:
        Complete Sample FileName String.

RESULTS:
        key - a unique value used to identify the sample

EXAMPLE:
        S16OpenRecordOutput 'Ram:Number9'
        key1=result

        S16Trigger key1

        S16WaitGPI
        S16Close key1
**************************************************************************/

/**************************************************************************
'S16OpenWithAutoClose' - Open a Sample With Automated Closing

DESCRIPTION:
        This function is used for playing back samples without having to
        close them, this is done automatically when the sample ends.  
        you still must trigger the sample.

PARAMETERS:
        Complete Sample FileName String.

RESULTS:
        key - a unique value used to identify the sample

EXAMPLE:
        S16OpenWithAutoClose 'Audio:Sample'
        key=result
        S16Trigger key
**************************************************************************/

/**************************************************************************
'S16Trigger' - Begin the IO of a previously opened sample

DESCRIPTION:
        This function starts a samples record or playback.  Multiple
        'Keys' may be passed to start and stop stereo sample playback
        and record.  Up to eight keys may be passed at one time.

PARAMETERS:
        One or more 'Key' values (supplied by an Open)

RESULTS:
        NONE

EXAMPLE:
        S16OpenWithAutoClose 'Audio:Sample_Left'
        key1=result
        S16OpenWithAutoClose 'Audio:Sample_Right'
        key2=result

        S16Trigger key1 key2
**************************************************************************/

/**************************************************************************
'S16Close' - Close a previously opened sample

DESCRIPTION:
        This function closes a previously opened sample.  If you are
        closing a playback sample, S16Close will wait for the  sample
        to finish playing back.  If you are closing a record sample then
        the close will stop the record and close the file.

PARAMETERS:
        One 'Key' value (supplied by an Open)

RESULTS:
        NONE

EXAMPLE:
        S16Open 'Audio:Sample'
        key=result
        S16Trigger key
        S16Close key
**************************************************************************/


/*************************************************************************
POSSIBLE ERRORS CODES
*********************
#define RX_ER_NO_HANDLER 21
#define RX_ER_INVALID_CHAN_TYPE 22
#define RX_ER_COULD_NOT_OPEN_SAMPLE 23
#define RX_ER_UNSUPORTED_PARAMETER 11
#define RX_ER_COULD_NOT_ALLOCATE_KEY 12
#define RX_ER_COULD_NOT_FIND_SAMPLE 13
#define RX_ER_INVALID_PARAMETER 14
#define RX_ER_TIME_CODE_PAST 6
*************************************************************************/
