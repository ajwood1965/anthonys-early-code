
"A NEW SERIAL RECEIVE INTERUPT HANDLER FOR USE WITH MIDI"

For questions concerning these routines contact:

Anthony J. Wood
3801 Old College rd.
Bryan, TX 77801
(409) 846-1311

Last update: 02-07-88

Enclosed are routines to read data from the serial port. To use them,
you must first open the serial device as usual. This is to allocate the
device and set parameters (baud rate, etc.)  Also, you will have to use
standard serial.device cmds to write data. Note that I have not tested
these routines while also writing to the serial port, but it will
hopefully work.


midi_init()

   Call this after you open the serial.device, but before using any
   of my commands.  This routine replaces the serial.device interrupt
   handler.

midi_end()

   Call this when you are done but before you close the serial.device.

midi_check()

   This returns the number of bytes receive so far. ONLY use this to see
   if there are zero or not zero bytes waiting. Remember, as soon as
   you call this a midi byte may come in.

count = midi_grab(data)

   This transfer however many bytes are waiting into your data area. A
   maximum of 512 bytes will be transfered.

   if count <=512 it is the number of bytes transfered
   if count > 512 it means 512 bytes was transfered, and the buffer
   has been overrun.


