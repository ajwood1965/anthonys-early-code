°°±°° ;*** Boot -n- Copy ***°°±±° ;(C) Copyright 1983 Anthony Wood°°±²° ;8-3-83°°±³° 	ORG	4300H°°±´° 	DI°°±µ° 	LD	SP,4300H°°±¶° 	LD	HL,INTRO°°±·° 	CALL	PRINT°°±¸° 	LD	HL,DES°°±¹° 	CALL	PRINT°°²°° 	LD	HL,FILES°°²±° CPY	LD	DE,BUFFER	;PUT FILENAME IN BUFFER°°²²° CLP	LD	A,(HL)°°²³° 	LD	(DE),A°°²´° 	CP	10°°²µ° 	INC	HL°°²¶° 	INC	DE°°²·° 	JR	NZ,CLP°°²¸° 	DEC	DE°°²¹° 	LD	A,0DH°°³°° 	LD	(DE),A°°³±° 	PUSH	HL°°³²° 	CALL	BCPY°°³³° 	POP	HL°°³´° 	LD	A,(HL)°°³µ° 	CP	0DH°°³¶° 	JP	Z,KEY°°³·° 	PUSH	HL°°³¸° 	LD	HL,NXTF°°³¹° 	CALL	PRINT°°´°° 	CALL	40H°°´±° 	POP	HL°°´²° 	JR	CPY°°´³° BCPY	LD	HL,MAIN°°´´° 	LD	(AT),HL			;BUFFER LOC°°´µ° 	XOR	A°°´¶° 	LD	(GCOUNT),A°°´·° 	LD	A,1°°´¸° 	LD	(37E1H),A		;SELET DRIVE°°´¹° 	LD	HL,BUFFER°°µ°° 	CALL	PACK			;CREATE DOS PASS°°µ±° 	LD	B,11°°µ²° 	LD	C,0			;ZERO HASH REG°°µ³° 	LD	DE,FNAME°°µ´° HLOOP	LD	A,(DE)°°µµ° 	INC	DE			;GET CHAR TO HASH°°µ¶° 	XOR	C°°µ·° 	RLCA°°µ¸° 	LD	C,A°°µ¹° 	DJNZ	HLOOP			;HASH WHOLE FILE°°¶°° 	LD	A,C°°¶±° 	OR	A°°¶²° 	JP	NZ,DONE°°¶³° 	INC	A°°¶´° DONE	LD	(HASH),A°°¶µ° 	CALL	RHASH°°¶¶° SRCH	LD	A,(HASH)°°¶·° 	CALL	LKHT			;READ HIT TABLE°°¶¸° 	JR	NZ,CHK		;GO IF ITEM FOUND°°¶¹° 	LD	HL,FNF°°·°° 	CALL	PRINT°°·±° KEY	LD	HL,RBO°°·²° 	CALL	PRINT°°·³° 	CALL	49H°°·´° 	JP	0°°·µ° CHK	XOR	A°°·¶° 	LD	(BC),A		;DO NOT FIND THIS AGAIN°°··° 	LD	D,17		;DIRECTORY°°·¸° 	LD	BC,DBUFF°°·¹° 	PUSH	HL°°¸°° 	CALL	READ°°¸±° 	POP	HL°°¸²° 	JP	NZ,DSKERR°°¸³° 	LD	BC,DBUFF+5°°¸´° 	ADD	HL,BC		;HL=LOC OF ADDRESS  °°¸µ° 	LD	DE,FNAME°°¸¶° 	LD	B,11°°¸·° CMP	LD	A,(DE)°°¸¸° 	CP	(HL)°°¸¹° 	JR	NZ,SRCH°°¹°° 	INC	DE°°¹±° 	INC	HL°°¹²° 	DJNZ	CMP°°¹³° 	LD	DE,10H°°¹´° 	XOR	A°°¹µ° 	SBC	HL,DE°°¹¶° 	LD	DE,DCB°°¹·° 	LD	BC,32°°¹¸° 	LDIR			;PUT DIR ENTRY INTO DCB°°¹¹° 	LD	HL,DCB+22	;GAP START°±°°° 	LD	BC,MAIN		;PUT PROGRAM HERE°±°±° NXTGLP	LD	A,(HL)°±°²° 	CP	0FFH°±°³° 	JR	Z,WRITE°±°´° 	CP	0FE°±°µ° 	JR	Z,FXDE°±°¶° 	LD	D,A°±°·° 	INC	HL°±°¸° 	LD	A,(HL)°±°¹° 	LD	E,0°±±°° 	CP	20H°±±±° 	JR	C,ZERO°±±²° 	LD	E,5°±±³° 	SUB	20H°±±´° ZERO	INC	A°±±µ° 	PUSH	BC°±±¶° 	LD	B,A°±±·° 	LD	A,(GCOUNT)°±±¸° 	ADD	A,B°±±¹° 	POP	BC°±²°° 	LD	(GCOUNT),A°±²±° ZLP	CALL	RGRAN		;READ NEXT GRAN°±²²° 	DEC	A°±²³° 	JR	NZ,ZLP°±²´° 	INC	HL°±²µ° 	JR	NXTGLP°±²¶° FXDE	LD	HL,DIRERR°±²·° 	CALL	PRINT°±²¸° 	JP	KEY°±²¹° WRITE	LD	HL,MOUNT°±³°° 	CALL	PRINT°±³±° 	CALL	49H°±³²° 	LD	BC,GAT°±³³° 	LD	D,17°±³´° 	LD	E,0°±³µ° 	CALL	READ°±³¶° 	JP	NZ,DSKERR°±³·° 	CALL	RHASH°±³¸° 	XOR	A°±³¹° 	CALL	LKHT		;SEARCH HIT FOR ENTRY°±´°° 	JR	NZ,DOKY°±´±° 	LD	HL,FDIR°±´²° 	CALL	PRINT°±´³° 	JP	KEY°±´´° DOKY	LD	A,(HASH)°±´µ° 	LD	(BC),A		;ENTER OUR FILE°±´¶° 	LD	A,E°±´·° 	LD	(WRT),A°±´¸° 	LD	(RELB),HL	;SAVE RELETIVE BYTE°±´¹° 	LD	HL,DCB+16H	;PUT GLP HERE°±µ°° PUTIT	PUSH	HL		;SAVE°±µ±° 	CALL	FREE°±µ²° 	POP	HL°±µ³° POK	LD	(HL),D°±µ´° 	INC	HL°±µµ° 	LD	A,(MASK)°±µ¶° 	OR	E°±µ·° 	LD	(HL),A°±µ¸° 	INC	HL°±µ¹° 	PUSH	DE°±¶°° 	PUSH	HL°±¶±° 	CALL	GWRITE		;WRITE THE GRANS°±¶²° 	POP	HL°±¶³° 	POP	DE°±¶´° 	LD	A,(GCOUNT)°±¶µ° 	DEC	A°±¶¶° 	SUB	E°±¶·° 	JR	Z,CLOSE°±¶¸° 	LD	(GCOUNT),A°±¶¹° 	PUSH	HL°±·°° 	LD	DE,1EH+DCB°±·±° 	XOR	A°±·²° 	SBC	HL,DE		;DO WE NEED AN FXDE?°±·³° 	POP	HL°±·´° 	JR	NZ,PUTIT°±·µ° 	LD	HL,NEED°±·¶° 	CALL	PRINT°±··° 	JP	KEY		;MAKE THIS BETER LATER°±·¸° CLOSE	LD	(HL),0FFH°±·¹° 	INC	HL°±¸°° 	LD	(HL),0FFH°±¸±° 	LD	D,17		;DIR TRK°±¸²° 	LD	A,(WRT)		;SECTOR°±¸³° 	LD	E,A°±¸´° 	LD	BC,DBUFF°±¸µ° 	CALL	READ		;READ SECTOR TO UPDATE°±¸¶° 	JP	NZ,DSKERR°±¸·° 	LD	DE,DBUFF°±¸¸° 	LD	HL,(RELB)	;GET REL BYTE OF ENTRY°±¸¹° 	ADD	HL,DE°±¹°° 	LD	DE,DCB°±¹±° 	EX	DE,HL		;MAKE HL SOURSE ,DE DES°±¹²° 	LD	BC,32°±¹³° 	LDIR°±¹´° 	LD	BC,DBUFF		;SOURCE TO WRITE°±¹µ° 	LD	D,17°±¹¶° 	LD	A,(WRT)		;SECTOR°±¹·° 	LD	E,A°±¹¸° 	CALL	WRTD		;WRITE DIR SECTOR°±¹¹° 	JP	NZ,DSKERR°²°°° ;UPDATE GAT TABLE°²°±° 	LD	E,0°²°²° 	LD	BC,GAT°²°³° 	CALL	WRTD°²°´° 	JP	NZ,DSKERR°²°µ° ;UPDATE HASH SECTOR°²°¶° 	LD	HL,DBUFF°²°·° 	LD	DE,DBUFF+1°²°¸° 	LD	(HL),0°²°¹° 	LD	BC,255°²±°° 	LDIR°²±±° 	LD	HL,DBUFF°²±²° 	LD	DE,HIT		;SOURCE°²±³° 	LD	C,8°²±´° UHLP1	LD	B,8°²±µ° UHLP2	LD	A,(DE)°²±¶° 	LD	(HL),A°²±·° 	INC	HL°²±¸° 	INC	DE°²±¹° 	DJNZ	UHLP2°²²°° 	PUSH	DE°²²±° 	LD	DE,18H°²²²° 	ADD	HL,DE°²²³° 	POP	DE°²²´° 	DEC	C°²²µ° 	JR	NZ,UHLP1°²²¶° 	LD	BC,DBUFF°²²·° 	LD	D,17°²²¸° 	LD	E,1°²²¹° 	CALL	WRTD°²³°° 	JP	NZ,DSKERR°²³±° 	LD	HL,OPC°²³²° 	CALL	PRINT°²³³° 	RET°²³´° ;FREE - SEARCH THE GAT TABLE FOR CONTINUOUS FREE°²³µ° ;GRANUALS.  RETURNS THE FOLOWING FORMAT:°²³¶° ;BEGINING TRACK - D REG°²³·° ;# OF CONTINUOUS SECTORS - E REG°²³¸° ;(MASK) - THE MASK THAT WHEN OR'D TO E GIVES STARTING SEC°²³¹° ;BY USING BIT 5:°²´°° ;5=0 1ST GRAN ASSIGNED; 5=1 2ND GRAN ASSINGNED (SEC 5)°²´±° ;BITS 0-4 HOLDS # ASSIGNED GRANS MINUS 1°²´²° FREE	LD	HL,GAT	;CURRENT GAT POINTER°²´³° GTOP	LD	A,(HL)°²´´° 	CP	0FFH		;FULL?°²´µ° 	JP	Z,FULL		;JUMP IF NOT FREE°²´¶° 	LD	DE,GAT°²´·° 	XOR	A°²´¸° 	PUSH	HL°²´¹° 	SBC	HL,DE°²µ°° 	LD	A,L°²µ±° 	POP	HL°²µ²° 	LD	(TRKS),A°²µ³° 	LD	D,(HL)°²µ´° 	LD	A,0FFH°²µµ° 	LD	(HL),A°²µ¶° 	LD	A,D°²µ·° 	CP	0FCH		;BOTH FREE?°²µ¸° 	JR	NZ,FN1°²µ¹° 	LD	A,2		;2 GRANS°²¶°° 	LD	(SCNT),A	;PUT°²¶±° 	XOR	A		;START AT SEC 0°²¶²° 	LD	(MASK),A°²¶³° 	JR	MAINL°²¶´° FN1	CP	0FEH		;ONLY FIRST GRAN FREE°²¶µ° 	JR	NZ,FN2°²¶¶° 	XOR	A°²¶·° 	LD	(MASK),A°²¶¸° 	LD	A,1°²¶¹° 	LD	(SCNT),A°²·°° FNDTRK	LD	A,(TRKS)°²·±° 	LD	D,A°²·²° 	LD	A,(SCNT)°²·³° 	DEC	A°²·´° 	LD	E,A°²·µ° 	RET			;RET WITH TRK IN D°²·¶° FN2	CP	0FDH		;ONLY 2ND GRAN FREE°²··° 	JR	Z,FN3°²·¸° GERR	LD	HL,BGT°²·¹° 	CALL	PRINT°²¸°° 	JP	KEY°²¸±° FN3	LD	A,20H°²¸²° 	LD	(MASK),A°²¸³° 	LD	A,1°²¸´° 	LD	(SCNT),A°²¸µ° MAINL	LD	A,(SCNT)°²¸¶° 	LD	D,A°²¸·° 	LD	A,(GCOUNT)°²¸¸° 	CP	D°²¸¹° 	JR	Z,FNDTRK°²¹°° 	DEC	D°²¹±° 	CP	D°²¹²° 	JR	NZ,MAINL2°²¹³° 	LD	A,0FDH°²¹´° 	LD	(HL),A°²¹µ° 	LD	A,(SCNT)°²¹¶° 	DEC	A°²¹·° 	LD	(SCNT),A°²¹¸° 	JR	FNDTRK°²¹¹° MAINL2	INC	HL°³°°° 	LD	A,(HL)°³°±° SKP	CP	0FCH°³°²° 	JR	NZ,FN4°³°³° 	LD	D,2°³°´° 	LD	A,(SCNT)°³°µ° 	ADD	A,D°³°¶° 	LD	(SCNT),A°³°·° 	LD	A,0FF°³°¸° 	LD	(HL),A°³°¹° 	JR	MAINL°³±°° FN4	CP	0FEH°³±±° 	JR	NZ,FN5°³±²° 	LD	A,(SCNT)°³±³° 	LD	D,1°³±´° 	ADD	A,D°³±µ° 	LD	(SCNT),A°³±¶° 	LD	A,0FFH°³±·° 	LD	(HL),A°³±¸° 	JP	FNDTRK°³±¹° FN5	CP	0FDH°³²°° 	JR	Z,FNDTRK°³²±° 	CP	0FFH°³²²° 	JR	NZ,GERR°³²³° 	JR	FNDTRK°³²´° FULL	INC	HL°³²µ° 	LD	DE,GAT+45°³²¶° 	PUSH	HL°³²·° 	XOR	A°³²¸° 	SBC	HL,DE°³²¹° 	POP	HL°³³°° 	JP	NZ,GTOP°³³±° 	LD	HL,DFUL°³³²° 	CALL	PRINT°³³³° 	JP	KEY°³³´° ;GWRITE	- WRITE E CONTIUOUS GRANS , TRK D°³³µ° GWRITE	LD	B,E°³³¶° 	INC	B°³³·° 	XOR	A°³³¸° MULT5	ADD	A,5°³³¹° 	DJNZ	MULT5°³´°° 	LD	E,0°³´±° 	LD	B,A°³´²° 	LD	A,(MASK)°³´³° 	CP	20H°³´´° 	JR	NZ,GO°³´µ° 	LD	E,5°³´¶° GO	PUSH	BC°³´·° 	LD	BC,(AT)°³´¸° 	CALL	WRTN°³´¹° 	LD	(AT),BC°³µ°° 	POP	BC°³µ±° 	JP	NZ,DSKERR°³µ²° 	INC	E°³µ³° 	LD	A,E°³µ´° 	CP	10°³µµ° 	JR	Z,GO2°³µ¶° GO3	DJNZ	GO°³µ·° 	RET°³µ¸° GO2	LD	E,0°³µ¹° 	INC	D°³¶°° 	JR	GO3°³¶±° WRTD	PUSH	BC°³¶²° 	LD	A,1°³¶³° 	LD	(37E1H),A°³¶´° 	CALL	TRY2°³¶µ° 	POP	HL°³¶¶° 	RET	Z°³¶·° 	LD	B,H°³¶¸° 	LD	C,L		;TRY SECOND TIME ON ERROR°³¶¹° TRY2	LD	(37EEH),DE	;SET TRK & SECTOR°³·°° 	LD	HL,37ECH	;COMMAND REG°³·±° 	LD	(HL),1BH	;SEEK WITH LARGE DELAY°³·²° 	EX	(SP),HL°³·³° 	EX	(SP),HL°³·´° 	EX	(SP),HL°³·µ° 	EX	(SP),HL		;DIGEST COMAND°³·¶° WAIT2	LD	A,(HL)°³··° 	RRCA			;WAIT TILL DSK READY°³·¸° 	JR	C,WAIT2°³·¹° COM	LD	(HL),0A9H	;READ BYTE COMAND°³¸°° 	PUSH	DE°³¸±° 	LD	DE,37EFH	;DATA REGISTER°³¸²° 	EX	(SP),HL°³¸³° 	EX	(SP),HL		;DELAY°³¸´° 	JR	DOIT2°³¸µ° AGAIN2	RRCA			;TEST FOR SEC END OR ERR°³¸¶° 	JR	NC,FIN2°³¸·° DOIT2	LD	A,(HL)		;GET STATUS°³¸¸° 	BIT	01,A		;DRQ TEST°³¸¹° 	JR	Z,AGAIN2		;NOT READY. TEST FOR ERR°³¹°° 	LD	A,(BC)°³¹±° 	LD	(DE),A		;GET AND SAVE DATA°³¹²° 	INC	BC		;NEXT LOC TO SAVE DATA°³¹³° 	JR	DOIT2°³¹´° FIN2	LD	A,(HL)		;RESTORE STATUS°³¹µ° 	AND	1CH		;TEST FOR THE 3 ERRORS°³¹¶° 	POP	DE		;RESTORE TRK & SEC°³¹·° 	RET	Z		;RET IF NORMAL END°³¹¸° 	LD	(HL),0D0H	;FOURCE INTERUPT°³¹¹° 	RET°´°°° WRTN	LD	A,0A8H		;WRITE TO NORMAL TRK°´°±° 	LD	(COM+1),A°´°²° 	CALL	WRTD°´°³° 	LD	A,0A9H°´°´° 	LD	(COM+1),A		;RESTORE°´°µ° 	RET°´°¶° ;LKHT	SEARCH HIT TABLE FOR "A"°´°·° ;ON EXIT: E=REL DIR SECTOR, BC=ADDRS IN MEM OF HASH°´°¸° ;HL=REL BYTE LOC IN SETOR E OF HASH°´°¹° LKHT	LD	HL,HIT°´±°° 	LD	D,A		;VALUE TO LOOK FOR°´±±° 	LD	E,8°´±²° 	LD	C,0°´±³° HALP	LD	B,8°´±´° HALP2	LD	A,(HL)°´±µ° 	CP	D°´±¶° 	JR	Z,ADRS°´±·° 	INC	HL°´±¸° 	DJNZ	HALP2°´±¹° 	LD	A,20H°´²°° 	ADD	A,C°´²±° 	LD	C,A°´²²° 	DEC	E°´²³° 	JR	NZ,HALP°´²´° 	RET°´²µ° ADRS	LD	A,10D°´²¶° 	SUB	B°´²·° 	LD	B,0°´²¸° 	LD	E,A°´²¹° 	PUSH	BC°´³°° 	PUSH	HL°´³±° 	POP	BC°´³²° 	POP	HL°´³³° 	OR	0FF°´³´° 	RET°´³µ° ;PACK		TAKES A PASSWORD AND PUTS IN BLANKS°´³¶° PACK	LD	DE,FNAME+1°´³·° 	PUSH	HL°´³¸° 	LD	HL,FNAME°´³¹° 	LD	BC,10°´´°° 	LD	A,20H°´´±° 	LD	(HL),A°´´²° 	LDIR°´´³° 	POP	HL°´´´° 	LD	DE,FNAME°´´µ° LP	LD	A,(HL)°´´¶° 	CP	0DH°´´·° 	RET	Z°´´¸° 	CP	'/'°´´¹° 	JR	NZ,NOEXT°´µ°° 	LD	DE,FNAME+7°´µ±° 	JR	NOEXT2°´µ²° NOEXT	LD	(DE),A°´µ³° NOEXT2	INC	HL°´µ´° 	INC	DE°´µµ° 	JR	LP°´µ¶° ;RHASH		-	READ HIT TABLE°´µ·° RHASH	LD	D,17°´µ¸° 	LD	E,1°´µ¹° 	LD	BC,DBUFF°´¶°° 	CALL	READ°´¶±° 	JR	NZ,DSKERR°´¶²° 	LD	DE,HIT°´¶³° 	LD	HL,DBUFF°´¶´° 	LD	C,8°´¶µ° HLP1	LD	B,8°´¶¶° HLP2	LD	A,(HL)°´¶·° 	LD	(DE),A°´¶¸° 	INC	HL°´¶¹° 	INC	DE°´·°° 	DJNZ	HLP2°´·±° 	PUSH	DE°´·²° 	LD	DE,18H°´·³° 	ADD	HL,DE°´·´° 	POP	DE°´·µ° 	DEC	C°´·¶° 	JR	NZ,HLP1°´··° 	RET°´·¸° PRINT	LD	A,(HL)°´·¹° 	CALL	33H°´¸°° 	CP	0°´¸±° 	RET	Z°´¸²° 	CP	0DH°´¸³° 	RET	Z°´¸´° 	INC	HL°´¸µ° 	JR	PRINT°´¸¶° DSKERR	LD	HL,DIO°´¸·° 	CALL	PRINT°´¸¸° 	JP	KEY°´¸¹° ;RGRAN	- READ NEXT GRANUAL INTO (BC). ON ENTRY:°´¹°° ;D= STARTING TRK#, E=STARTING SEC #°´¹±° RGRAN	PUSH	AF		;SAVE°´¹²° 	PUSH	HL		;SAVE°´¹³° NOPE	CALL	READ°´¹´° 	JR	NZ,DSKERR°´¹µ° 	INC	E°´¹¶° 	LD	A,E°´¹·° 	CP	5°´¹¸° 	JR	Z,DONE2°´¹¹° 	CP	10°µ°°° 	JR	NZ,NOPE°µ°±° CLR	LD	E,0°µ°²° 	INC	D		;GO TO NEXT TRACK°µ°³° DONE2	POP	HL°µ°´° 	POP	AF°µ°µ° 	RET°µ°¶° ;SECTOR READ.°µ°·° ;ON ENTRY --> D=TRACK, E=SECTOR, BC=MEM LOC TO PUT SECTOR°µ°¸° READ	PUSH	BC°µ°¹° 	LD	A,1°µ±°° 	LD	(37E1H),A°µ±±° 	CALL	TRY°µ±²° 	POP	HL°µ±³° 	RET	Z°µ±´° 	LD	B,H°µ±µ° 	LD	C,L		;TRY SECOND TIME ON ERROR°µ±¶° TRY	LD	(37EEH),DE	;SET TRK & SECTOR°µ±·° 	LD	HL,37ECH	;COMMAND REG°µ±¸° 	LD	(HL),1BH	;SEEK WITH LARGE DELAY°µ±¹° 	EX	(SP),HL°µ²°° 	EX	(SP),HL°µ²±° 	EX	(SP),HL°µ²²° 	EX	(SP),HL		;DIGEST COMAND°µ²³° WAIT	LD	A,(HL)°µ²´° 	RRCA			;WAIT TILL DSK READY°µ²µ° 	JR	C,WAIT°µ²¶° 	LD	(HL),88H	;READ BYTE COMAND°µ²·° 	PUSH	DE°µ²¸° 	LD	DE,37EFH	;DATA REGISTER°µ²¹° 	EX	(SP),HL°µ³°° 	EX	(SP),HL		;DELAY°µ³±° 	JR	DOIT°µ³²° AGAIN	RRCA			;TEST FOR SEC END OR ERR°µ³³° 	JR	NC,FIN°µ³´° DOIT	LD	A,(HL)		;GET STATUS°µ³µ° 	BIT	01,A		;DRQ TEST°µ³¶° 	JR	Z,AGAIN		;NOT READY. TEST FOR ERR°µ³·° 	LD	A,(DE)°µ³¸° 	LD	(BC),A		;GET AND SAVE DATA°µ³¹° 	INC	BC		;NEXT LOC TO SAVE DATA°µ´°° 	JR	DOIT°µ´±° FIN	LD	A,(HL)		;RESTORE STATUS°µ´²° 	AND	1CH		;TEST FOR THE 3 ERRORS°µ´³° 	POP	DE		;RESTORE TRK & SEC°µ´´° 	RET	Z		;RET IF NORMAL END°µ´µ° 	LD	(HL),0D0H	;FOURCE INTERUPT°µ´¶° 	RET°µ´·° INTRO	DEFM	'Boot-N-Copy   (C) Copyright 1983 Anthony Wood'°µ´¸° 	DEFB	0DH°µ´¹° DES	DEFM	'The following files are to be copyed:'°µµ°° 	DEFB	10°µµ±° FILES	DEFM	'COMPAC/CMD'°µµ²° 	DEFB	10°µµ³° 	DEFM	'GRAPH/TAB'°µµ´° 	DEFB	10°µµµ° 	DEFM	'XFER/CMD'°µµ¶° 	DEFB	10°µµ·° 	DEFB	0DH°µµ¸° RBO	DEFM	'Press <Enter> to re-boot'°µµ¹° 	DEFB	13°µ¶°° FNF	DEFM	'File not in directory!'°µ¶±° 	DEFB	13°µ¶²° DIO	DEFM	'Disk error!'°µ¶³° 	DEFB	0DH°µ¶´° DIRERR	DEFM	'Sorry, this file contains an extended directory entry.'°µ¶µ° 	DEFB	0DH°µ¶¶° GCOUNT	DEFB	0°µ¶·° FDIR	DEFM	'Directory full!'°µ¶¸° 	DEFB	0DH°µ¶¹° MOUNT	DEFM	'Insert the destination disk and press <Enter>.'°µ·°° 	DEFB	0DH°µ·±° BGT	DEFM	'Bad GAT table! Operation aborted!'°µ·²° 	DEFB	0DH°µ·³° NEED	DEFM	'Directory overflow. An FXDE is needed, but I do not'°µ·´° 	DEFB	10°µ·µ° 	DEFM	'know how to create one.  You need to create a disk that'°µ·¶° 	DEFB	10°µ··° 	DEFM	'has a longer segment of continuous granuals.'°µ·¸° 	 DEFB	0DH°µ·¹° OPC	DEFM	'File saved to disk.'°µ¸°° 	DEFB	0DH°µ¸±° DFUL	DEFM	'Disk full.'°µ¸²° 	DEFB	0DH°µ¸³° NXTF	DEFM	'Insert source disk and press <Enter>.'°µ¸´° 	DEFB	0DH°µ¸µ° BUFFER	DEFS	20°µ¸¶° DBUFF	DEFS	256°µ¸·° HIT	DEFS	64°µ¸¸° FNAME	DEFS	11°µ¸¹° HASH	DEFS	1°µ¹°° DCB	DEFS	32°µ¹±° GAT	DEFS	256°µ¹²° WRT	DEFB	1°µ¹³° RELB	DEFS	2°µ¹´° MASK	DEFS	1°µ¹µ° SCNT	DEFS	1°µ¹¶° TRKS	DEFS	1°µ¹·° AT	DEFS	2°µ¹¸° MAIN	DEFS	1°µ¹¹° 	END	4300H            