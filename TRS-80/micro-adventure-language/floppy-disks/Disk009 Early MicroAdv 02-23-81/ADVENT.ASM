ÓADVENT°°°¹° *LIST OFF°°±°° 	ORG	8000H°°±±° 	LD	HL,M1°°±²° 	CALL	PRINT		;PRINT INTRO MESSAGE°°±³° 	LD	A,0EH°°±´° 	CALL	33H		;TURN ON CURSOR°°±µ° START	LD	A,94D		;ARROW CHAR.°°±¶° 	CALL	33H		;PRINT IT°°±·° 	CALL	INPUT		;GET PROGRAM STATEMENT°°±·± 	LD	HL,ED°°±·² 	LD	DE,BUFFER°°±·³ 	CALL	CMPR°°±·´ 	CALL	Z,EDIT°°±·µ 	JR	Z,START°°±¸° 	LD	HL,DATA°°±¹° 	LD	DE,BUFFER	;IS INPUT "DATA" COMAND?°°²°° 	CALL	CMPR		;CALL COMPARE°°²±° 	JP	NZ,CMCP		;IF NOT, STORE PROG. LINE°°²²° ERCT	LD	HL,RM°°²³° 	CALL	PRINT		;PRINT"WHAT ROOM NUMBER?"°°²´° 	CALL	INPUT		;GET ANSWER°°²µ° 	LD	A,0DH		;SEE IF INPUT IS IN THE°°²¶° 	LD	HL,BUFFER+2	;RIGHT FORMAT (2 DIGETS)°°²·° 	CP	(HL)°°²¸° 	JR	Z,CNT		;IF ZERO SKIP NEXT PART°°²¹° 	LD	HL,ERROR°°³°° 	CALL	PRINT		;PRINT "?FORM ERROR"°°³±° 	JR	ERCT°°³²° CNT	CALL	CON1		;CONVERT RM# INPUT°°³³° 	LD	HL,M2°°³´° 	CALL	PRINT		;PRINT "OK, ENTER DATA"°°³µ° 	EX	AF,AF'		;SAVE "A" REG.°°³¶° 	LD	A,'>'°°³·° 	CALL	33H		;PRINT ">"°°³¸° 	CALL	INPUT		;GET ROOM DATA°°³¹° CNT3	LD	IX,PRO		;PROGRAM START POSTION°°´°° ZX	EX	AF,AF'		;GET OLD A°°´±° 	LD	B,(IX)		;RM #°°´²° 	CP	B		;CMPR WITH ROOM TO STORE°°´³° 	JR	Z,SPECIL	;IF SAME NO. JP SPECIL°°´´° 	EX	AF,AF'		;SAVE RM# AGAIN°°´µ° 	LD	A,0FFH		;END OF PROGRAM MARKER°°´¶° 	CP	B		;SEE IF FOUND°°´·° 	JR	Z,CNT2°°´¸° 	INC	IX°°´¹° 	JR	ZX°°µ°° CNT2	PUSH	IX		;MOVE END OF PROGRAM°°µ±° 	POP	DE		;INTO DESTINATION°°µ²° 	EX	AF,AF'		;GET ROOM NO.°°µ³° 	LD	(IX),A		;SAVE ROOM NO.°°µ´° 	INC	DE°°µµ° 	LD	A,0FDH		;LINE NO. MARKER°°µ¶° 	LD	(DE),A		;MARK DATA AS DATA°°µ·° 	INC	DE		;DESTINATION FOR DATA°°µ¸° 	LD	HL,BUFFER	;SORCE°°µ¹° 	CALL	LEN		;GET AMOUNT TO MOVE IN BC°°¶°° 	LDIR			;MOVE IT°°¶±° 	EX	DE,HL		°°¶²° 	LD	(HL),0FFH	;END OF PROGRAM MARKER°°¶³° 	JR	START°°¶´° SPECIL	EX	AF,AF'		;SAVE ROOM NO.°°¶µ° 	PUSH	IX		;LD ROOM NO. POS.°°¶¶° 	POP	HL		;INTO HL°°¶·° 	INC	HL°°¶¸° 	INC	HL°°¶¹° 	LD	BC,00°°·°° 	LD	A,0FDH		;BEGIN OF NEXT LINE MARK°°·±° 	CPIR			;FIND IT°°·²° 	DEC	HL		;TRUE POSITION°°·³° 	PUSH	IX		;GET°°·´° 	POP	DE		;DESTINATION°°·µ° 	DEC	HL°°·¶° SPLP	LD	A,(HL)°°··° 	LD	(DE),A		;MOVE BYTE°°·¸° 	LD	A,0FFH°°·¹° 	CP	(HL)		;LAST BYTE?°°¸°° 	INC	HL°°¸±° 	INC	DE°°¸²° 	JR	NZ,SPLP		;KEEP MOVING°°¸³° 	JR	CNT3°°¸´° CMCP	LD	DE,BUFFER°°¸µ° 	LD	HL,GO		;"GO" COMAND°°¸¶° 	CALL	CMPR		;CHECK IT°°¸·° 	JR	Z,ARUN		;IF SO THEN "RUN"°°¸¸° 	LD	DE,BUFFER°°¸¹° 	LD	HL,LST		;LIST°°¹°° 	CALL	CMPR°°¹±° 	JR	Z,LIST°°¹²° 	LD	HL,BUFFER	;FIND THE LENGTH°°¹³° 	CALL	LEN		;OF INPUT°°¹´° 	LD	HL,(POINT)°°¹µ° 	INC	BC		;INCLUDE CR AS MARKER°°¹¶° 	CALL	MOVE		;MAKE SPACE°°¹·° 	LD	HL,BUFFER	;SORCE°°¹¸° 	LD	DE,(POINT)	;CURRENT POS POINTER°°¹¹° 	PUSH	BC		;SAVE BYTE COUNTER°±°°° 	LDIR			;MOVE IT°±°±° 	LD	HL,(POINT)	;MAKE NEW POINTER°±°²° 	POP	BC°±°³° 	ADD	HL,BC°±°´° 	LD	(POINT),HL°±°µ° 	JP	START°±°¶° LIST	LD	HL,PRO		;PROGRAM START POS°±°·° LLOPP	LD	A,(HL)		;GET CHAR.°±°¸° 	CP	0FFH		;END OF PROGRAM MARKER°±°¹° 	JR	Z,SFN°±±°° 	CP	0FDH		;END OF DATA MARKER°±±±° 	JR	NZ,LCT°±±²° 	LD	A,10°±±³° 	CALL	33H		;PRINT LINE FEED°±±´° 	INC	HL°±±µ° 	JR	LLOPP		;NEXT CHARACTER°±±¶° LCT	PUSH	AF		;SAVE CHAR°±±·° 	CALL	2BH		;SCAN KEYBORD°±±¸° 	CP	'@'		;STOP LIST KEY°±±¹° 	JR	Z,LCT2°±²°° 	POP	AF		;GET OLD AF°±²±° 	JR	LCT3°±²²° LCT2	CALL	2BH		;SCAN KEYBORD°±²³° 	OR	A°±²´° 	JR	Z,LCT2°±²µ° 	POP	AF°±²¶° LCT3	CALL	TIME		;DELAY°±²·° 	INC	HL		;NEXT CHAR.°±²¸° 	CALL	33H		;PRINT IT°±²¹° 	JR	LLOPP°±³°° SFN	LD	A,10°±³±° 	CALL	33H°±³²° 	JP	START°±³³° ;RUN PART OF PROGRAM°±³´° ARUN	CALL	FEND		;GET END OF PROGRAM°±³µ° 	LD	(HL),0DEH	;DATA END MARKER°±³¶° 	INC	HL°±³·° 	LD	(HL),0FFH	;END OF PROGRAM MARKER°±³¸° RUN	LD	A,(NO)		;GET ROOM NO.°±³¹° 	CALL	SEARCH		;FIND IT°±´°° DOG	LD	A,(HL)		;GET CHAR.°±´±° 	INC	HL		;POINT NEXT CHAR.°±´²° 	CP	';'		;ITEM IN ROOM MARKER°±´³° 	JR	Z,BOG°±´´° 	CP	'@'		;END OF ITEMS MARKER°±´µ° 	JR	Z,HOG°±´¶° MUD	CALL	33H		;PRINT IT°±´·° 	JR	DOG°±´¸° BOG	LD	A,10		;LINE FEED°±´¹° 	JR	MUD		;PRINT LF°±µ°° HOG	LD	A,10		;LINE FEED°±µ±° 	CALL	33H°±µ²° PIG	LD	IX,NSEW		;ROOM JP STORGE°±µ³° 	LD	B,4°±µ´° PIG2	LD	E,(HL)°±µµ° 	INC	HL°±µ¶° 	LD	D,(HL)°±µ·° 	CALL	CON2°±µ¸° 	LD	(IX),A°±µ¹° 	INC	HL°±¶°° 	INC	IX°±¶±° 	DJNZ	PIG2°±¶²° INP	LD	HL,PRO°±¶³° 	LD	(POINT),HL°±¶´° 	CALL	INPUT°±¶µ° 	CALL	CHECK		;INVENTORY?°±¶¶° 	JR	Z,INP°±¶·° 	LD	HL,BUFFER+1	;CHECK IF INPUT°±¶¸° 	LD	A,(HL)°±¶¹° 	CP	0DH		;IS ONE LETTER°±·°° 	JR	NZ,COW		;GO IF NOT ONE LETTER°±·±° 	DEC	HL		;POINT TO LETTER°±·²° 	LD	IX,NSEW°±·³° 	LD	A,(HL)		;GET LETTER°±·´° 	CP	'N'		;NORTH?°±·µ° 	JR	NZ,SO°±·¶° 	LD	A,(IX)°±··° 	JR	SEMI°±·¸° SO	CP	'S'		;SOUTH?°±·¹° 	JR	NZ,EA°±¸°° 	LD	A,(IX+1)°±¸±° 	JR	SEMI°±¸²° EA	CP	'E'		;EAST?°±¸³° 	JR	NZ,WE°±¸´° 	LD	A,(IX+2)°±¸µ° 	JR	SEMI°±¸¶° WE	CP	'W'		;WEST?°±¸·° 	JR	NZ,ERR°±¸¸° 	LD	A,(IX+3)°±¸¹° SEMI	LD	(NO),A°±¹°° 	JR	RUN°±¹±° ERR	LD	HL,DONT°±¹²° 	CALL	PRINT°±¹³° 	JR	INP°±¹´° COW	LD	DE,(POINT)°±¹µ° 	LD	HL,TY:		;TYPE COMAND°±¹¶° 	CALL	CMPR		;COMPARE°±¹·° 	JR	NZ,COW2		;GO RET°±¹¸° FRANK	LD	A,(DE)°±¹¹° 	PUSH	DE		;SAVE°²°°° 	CALL	33H		;PRINT°²°±° 	POP	DE		;GET OLD°²°²° 	INC	DE°²°³° 	CP	0DH		;CR?°²°´° 	JR	NZ,FRANK°²°µ° 	LD	(POINT),DE°²°¶° 	JR	COW°²°·° COW2	LD	DE,(POINT)°²°¸° 	LD	HL,RTN°²°¹° 	CALL	CMPR		;COMPARE WITH RET°²±°° 	JP	Z,INP°²±±° 	LD	HL,VB:		;VERB COMAND°²±²° 	LD	DE,(POINT)	;CURRENT COMAND°²±³° 	CALL	CMPR		;IS IT VB:?°²±´° 	JR	NZ,COW3°²±µ° HAM	LD	HL,BUFFER	;1ST LETTER OF VERB LOCAT°²±¶° 	LD	BC,3°²±·° 	CALL	CMPR2		;MATCH?°²±¸° 	JR	NZ,PORK		;IF NOT FIND NEXT VB:°²±¹° 	LD	A,'.'°²²°° 	LD	BC,00°²²±° 	PUSH	DE°²²²° 	POP	HL°²²³° 	CPIR			;FIND "."°²²´° 	INC	HL°²²µ° 	LD	(POINT),HL°²²¶° 	JP	COW°²²·° PORK	LD	B,C		;GET AMOUNT LEFT°²²¸° PIGY	INC	DE°²²¹° 	DJNZ	PIGY°²³°° 	LD	A,(DE)°²³±° 	CP	'.'		;END OF VB MARKER°²³²° 	JR	NZ,HAM°²³³° 	LD	HL,VB:		;FIND NEXT VERB COMAND°²³´° 	CALL	INSTR°²³µ° 	JR	Z,FRIES°²³¶° 	LD	HL,DONT		;? I DON'T UNDERSTAND°²³·° 	CALL	PRINT°²³¸° 	JP	INP°²³¹° FRIES	LD	(POINT),DE°²´°° 	JP	COW°²´±° COW3	LD	DE,(POINT)	;IN+ COMAND°²´²° 	LD	HL,IPLUS°²´³° 	CALL	CMPR		;IS IT?°²´´° 	JR	NZ,COW4		;IF NOT IN-°²´´² 	PUSH	DE		;SAVE°²´´´ 	LD	HL,ND		;N$°²´´¶ 	CALL	CMPR°²´´¸ 	POP	DE		;GET OLD°²´µ° 	CALL	Z,NOUN°²´µ¶ 	CALL	FEND°²´¶° FISH	LD	A,(DE)		;GET CHAR°²´·° 	LD	(HL),A		;SAVE CHAR.°²´¸° 	INC	DE°²´¹° 	INC	HL°²µ°° 	CP	0DH°²µ±° 	JR	NZ,FISH°²µ²° 	LD	(HL),0FFH	;END OF PROGRAM MARKER°²µ³° 	CALL	NEXT°²µ´° 	JP	COW°²µµ° COW4	LD	DE,(POINT)	;IN- COMAND°²µ¶° 	LD	HL,IMIN°²µ·° 	CALL	CMPR		;IS IT IN-°²µ¸° 	JR	NZ,COW5		;IF NOT RM+°²µ¸µ 	CALL	NTEST		;CHANGE N$ TO ACTUAL POS°²µ¹° 	LD	HL,PRO		;FIND°²¶°° 	LD	BC,00		;0DEH (DATA END MARKER)°²¶±° 	LD	A,0DEH°²¶²° 	CPIR			;END OF DATA +1°²¶³° 	EX	DE,HL°²¶´° 	CALL	INSTR		;FIND STRING @DE°²¶µ° 	CALL	LEN		;GET LENGTH OF STRING @HL°²¶¶° 	INC	BC°²¶·° 	PUSH	DE°²¶¸° 	POP	HL°²¶¹° 	ADD	HL,BC		;GET SORCE°²·°° 	LD	A,0FFH		;END MARKER°²·±° 	CALL	MOVE2		°²·²° 	LD	HL,(POINT)°²·³° 	LD	A,0DH°²·´° 	LD	BC,00°²·µ° 	CPIR			;FIND NEXT COMAND°²·¶° 	LD	(POINT),HL°²··° 	JP	COW°²·¸° COW5	LD	HL,RMP		;IS IT RM+ COMMAND°²·¹° 	LD	DE,(POINT)°²¸°° 	CALL	CMPR°²¸±° 	JR	NZ,COW6		;GO RM- COMAND°²¸±µ 	CALL	NTEST		;CHANGE N$ TO NOUN POS°²¸²° 	LD	A,(NO)		;GET ROOM NO.°²¸³° 	CALL	SEARCH		;FIND ROOM°²¸´° 	LD	BC,00		;SEARCH INTILL FOUND°²¸µ° 	LD	A,'@'		;END OF ITEMS MARKER°²¸¶° 	CPIR			;FIND '@'°²¸·° 	DEC	HL		;TRUE POSITION°²¸¸° 	EX	DE,HL°²¸¹° 	CALL	LEN		;FIND LENGTH OF DE°²¹°° 	EX	DE,HL°²¹±° 	INC	BC°²¹²° 	CALL	MOVE		;MOVE IT°²¹³° 	LD	(HL),';'°²¹´° 	INC	HL°²¹µ° 	EX	DE,HL°²¹¶° 	DEC	BC		;GET RID OF CR°²¹·° 	LDIR			;MOVE NEW ITEM°²¹¸° 	EX	DE,HL°²¹¹° 	LD	(HL),'@'°³°°° 	INC	DE°³°±° 	CALL	NEXT°³°²° 	JP	COW°³°³° COW6	LD	HL,RMN		;IS IT RM- ?°³°´° 	LD	DE,(POINT)°³°µ° 	CALL	CMPR°³°¶° 	JR	NZ,COW7		;IF NOT, CP XX:XX COMAND°³°¶µ 	CALL	NTEST°³°·° 	LD	A,(NO)		;GET CURRENT ROOM NUMBER°³°¸° 	CALL	SEARCH		;FIND RM NO.°³°¹° 	EX	DE,HL°³±°° 	CALL	INSTR		;FIND POS OF ITEM IN DL°³±±° 	CALL	LEN		;GET LENGTH°³±²° 	PUSH	DE°³±³° 	POP	HL°³±´° 	ADD	HL,BC		;SORCE°³±µ° 	LD	A,0FFH		;END OF	PRO°³±µµ 	DEC	DE		;ADJUST FOR ";"°³±¶° 	CALL	MOVE2°³±·° XXXX	LD	HL,(POINT)°³±¸° 	LD	BC,00°³±¹° 	LD	A,0DH°³²°° 	CPIR°³²±° 	LD	(POINT),HL	;MAKE A SUBROUTINE°³²²° 	JP	COW°³²³° COW7	LD	DE,(POINT)°³²´° 	LD	HL,CP°³²µ° 	CALL	CMPR		;IS IT "CP N$:"?°³²¶° 	JR	NZ,CP2°³²·° 	LD	HL,BUFFER°³²¸° 	LD	A,20H		;SPACE°³²¹° 	LD	BC,128D°³³°° 	CPIR			;FIND IT°³³±° 	LD	BC,3		;AMOUNT TO COMPARE°³³²° 	CALL	CMPR2°³³³° 	JR	NZ,NEG°³³´° 	LD	A,1°³³µ° 	LD	(POSNEG),A°³³¶° 	JR	XXXX°³³·° NEG	LD	A,0°³³¸° 	LD	(POSNEG),A°³³¹° 	JR	XXXX°³´°° CP2	LD	HL,PF°³´±° 	LD	DE,(POINT)°³´²° 	LD	BC,2D°³´³° 	CALL	CMPR2°³´´° 	JR	NZ,COW8°³´µ° 	LD	A,(POSNEG)°³´¶° 	OR	A°³´·° 	CALL	Z,NEXT°³´·µ 	LD	(POINT),DE°³´¸° 	JP	COW°³´¹° COW8	LD	DE,(POINT)°³µ°° 	LD	HL,NF°³µ±° 	LD	BC,2D°³µ²° 	CALL	CMPR2°³µ³° 	JR	NZ,COW10°³µ´° 	LD	A,(POSNEG)°³µ´µ 	OR	A°³µµ° 	CALL	NZ,NEXT°³µµµ 	LD	(POINT),DE°³µ¶° 	JP	COW°³¶´° COW10	LD	HL,INVCK	;CP I$:?°³¶µ° 	LD	DE,(POINT)°³¶¶° 	CALL	CMPR°³¶·° 	JR	NZ,COW11°³¶·² 	LD	HL,ND		;N$?°³¶·´ 	PUSH	DE		;SAVE°³¶·¶ 	CALL	CMPR°³¶·¸ 	POP	DE°³¶¸° 	CALL	Z,NOUN°³¶¸¸ 	LD	BC,00°³¶¹° 	LD	A,0DEH		;BEGINING OF INV°³·°° 	LD	HL,PRO°³·±° 	CPIR			;FIND BEGIN OF INVEMT°³·²° 	EX	DE,HL°³·²² 	LD	IX,ALT°³·²´ 	LD	(IX+1),0FFH	;NEW DATA END MARKER°³·³° 	CALL	INSTR°³·³² 	LD	(IX+1),0FDH°³·´° 	JR	Z,YEP°³·µ° 	LD	A,0°³·¶° 	LD	(POSNEG),A°³··° 	CALL	NEXT°³·¸° 	JP	COW°³·¹° YEP	LD	A,1°³¸°° 	LD	(POSNEG),A°³¸±° 	CALL	NEXT°³¸²° 	JP	COW°³¸³° COW11	LD	HL,JMP°³¸´° 	LD	DE,(POINT)°³¸µ° 	CALL	CMPR°³¸¶° 	JR	NZ,COW12°³¸·° 	LD	BC,00°³¸¸° 	LD	A,'*'°³¸¹° 	LD	HL,PRO°³¹°° PIN	CPIR°³¹±° 	LD	BC,2°³¹±µ 	PUSH	DE°³¹²° 	CALL	CMPR2°³¹²µ 	POP	DE°³¹³° 	JR	NZ,PIN°³¹´° 	INC	HL°³¹µ° 	LD	(POINT),HL°³¹¶° 	JP	COW°³¹·° COW12	LD	HL,ROM°³¹¸° 	LD	DE,(POINT)°³¹¹° 	CALL	CMPR°´°°° 	JR	NZ,COW13°´°±° 	CALL	NTEST°´°²° 	LD	A,(NO)		;GET ROOM NO.°´°³° 	CALL	SEARCH		;GET POS OF ROOM°´°³µ 	EX	DE,HL°´°´° 	CALL	INSTR°´°µ° 	JR	NZ,NEGG°´°¶° 	LD	A,1°´°·° 	LD	(POSNEG),A°´°¸° 	CALL	NEXT°´°¹° 	JP	COW°´±°° NEGG	LD	A,0°´±±° 	LD	(POSNEG),A°´±²° 	CALL	NEXT°´±³° 	JP	COW°´±´° COW13	LD	HL,REQ°´±µ° 	LD	DE,(POINT)°´±¶° 	CALL	CMPR°´±·° 	JR	NZ,COW14°´±¸° 	EX	DE,HL°´±¹° 	LD	E,(HL)°´²°° 	INC	HL°´²±° 	LD	D,(HL)°´²²° 	CALL	CON2°´²³° 	LD	(NO),A°´²µ° 	JP	RUN°´²¶° COW14	LD	DE,(POINT)°´²·° 	LD	HL,LABAL°´²¸° 	CALL	CMPR°´²¹° 	JR	NZ,COW15°´³°° 	EX	DE,HL°´³±° 	LD	E,(HL)°´³²° 	INC	HL°´³³° 	LD	D,(HL)°´³´° 	CALL	CON2°´³µ° 	LD	HL,NO°´³¶° 	CP	(HL)°´³·° 	JR	Z,POSS°´³¸° 	LD	A,0°´³¹° 	LD	(POSNEG),A°´³¹µ 	CALL	NEXT°´´°° 	JP	COW°´´±° POSS	LD	A,1°´´²° 	LD	(POSNEG),A°´´²µ 	CALL	NEXT°´´³° 	JP	COW°´´´° COW15	CALL	NEXT		;SKIP IT - UNKNOWN COMAND°´´µ° 	JP	COW°µ°°° ;LOADS DE WITH POSITON OF THE INPUT NOUN°µ°°µ NOUN	PUSH	HL		;SAVE°µ°±° 	LD	HL,BUFFER°µ°²° 	LD	A,' '°µ°³° 	LD	BC,128D°µ°´° 	CPIR°µ°µ° 	EX	DE,HL°µ°¶° 	POP	HL°µ°·° 	RET°µ°¸° NEXT	LD	HL,(POINT)°µ°¹° 	LD	BC,00°µ±°° 	LD	A,0DH°µ±±° 	CPIR			;FIND LAST CHR+1°µ±²° 	LD	(POINT),HL°µ±²µ 	EX	DE,HL°µ±³° 	RET°µ±´° ;NTEST - IF DE POINTS TO N$, CHANGES DE TO "NOUN" POS°µ±µ° NTEST	PUSH	DE		;SAVE°µ±¶° 	LD	HL,ND°µ±·° 	CALL	CMPR°µ±¸° 	POP	DE°µ±¹° 	CALL	Z,NOUN°µ²°° 	RET°µ²²° ;EDIT ROUTINE°µ²³° EDIT	LD	HL,(PT2)°µ²´° ZXZ	LD	A,(HL)°µ²µ° 	CALL	33H		;PRINT°µ²¶° 	CP	0DH		;CR?°µ²·° 	JR	Z,BOOK°µ²¸° 	INC	HL°µ²¹° 	JR	ZXZ°µ³°° BOOK	CALL	2BH		;SCAN KEYBORD°µ³±° 	OR	A°µ³²° 	JR	Z,BOOK		;AGAIN IF NO CHAR°µ³²² 	CP	'X'		;EXIT COMAND°µ³²´ 	JR	Z,NEWPT°µ³³° 	CP	5BH		;UP ARROW°µ³´° 	JR	Z,UP°µ³µ° 	CP	0AH		;DOWN ARROW°µ³¶° 	CALL	Z,DOWN°µ³¶µ 	JR	Z,EDIT°µ³·° 	CP	'I'		;INSERT°µ³¸° 	JR	Z,INSER°µ³¹° 	CP	'D'		;DELETE°µ´°° 	JR	NZ,BOOK		;NON LEGAL COMAND°µ´±° 	LD	DE,(PT2)	;DESTINATION°µ´²° 	LD	HL,(PT2)°µ´³° 	LD	A,0DH		;END MARKER°µ´´° 	CPIR°µ´´µ 	LD	A,0FFH°µ´µ° 	CALL	MOVE2°µ´¶° 	JR	BOOK°µ´·° INSER	CALL	INPUT		;GET NEW LINE°µ´·² 	CALL	DOWN°µ´¸° 	LD	HL,BUFFER°µ´¹° 	CALL	LEN		;GET LENGTH IN BUFFER°µµ°° 	INC	BC		;INCLUDE CR°µµ±° 	LD	HL,(PT2)°µµ²° 	CALL	MOVE°µµ³° 	LD	HL,BUFFER°µµ³µ 	LD	DE,(PT2)°µµ´° 	LDIR°µµµ° 	JR	BOOK°µµ¶° DOWN	LD	HL,(PT2)°µµ·° 	LD	A,0DH°µµ¸° 	LD	BC,00°µµ¹° 	CPIR°µ¶°° 	LD	(PT2),HL°µ¶±° 	RET°µ¶²° UP	LD	HL,(PT2)°µ¶³° 	LD	BC,00°µ¶´° 	LD	A,0DH°µ¶µ° 	CPDR°µ¶¶° 	CPDR°µ¶·° 	INC	HL°µ¶·µ 	INC	HL°µ¶¸° 	LD	(PT2),HL°µ¶¹° 	JR	EDIT°µ·°° NEWPT	LD	HL,PRO°µ·±° 	LD	BC,16000	;SEARCH 16K°µ·²° HERE	LD	A,0FDH°µ·³° 	CPI°µ·³± 	JR	Z,ZERO°µ·³² 	LD	A,0FFH°µ·³´ 	CP	(HL)°µ·³¶ 	JR	Z,NWPT2°µ·³¸ 	JR	HERE°µ·´° ZERO	DEC	HL°µ·¶° 	DEC	HL°µ¸°³ 	LD	(POINT),HL°µ¸°¶ 	JP	START°µ¸µ° NWPT2	DEC	HL°µ¸¶° 	LD	(POINT),HL°µ¸·° 	JP	START°¶°°° TIME	PUSH	BC°¶°±° 	LD	BC,0020H°¶°²° TLP	DEC	B°¶°³° 	JR	NZ,TLP°¶°´° 	DEC	C°¶°µ° 	JR	NZ,TLP°¶°¶° 	POP	BC°¶°·° 	RET°¶°¸° ;MOVE2°¶°¹° ;MOVES FROM HL TO DE°¶±°° ;MOVES INTILL AN END CHARACTER IS ENCOUNTERED (IN A REG)°¶±±° MOVE2	PUSH	BC		;SAVE°¶±²° 	PUSH	AF°¶±³° 	POP	BC°¶±´° MVLP	LD	A,(HL)°¶±µ° 	LD	(DE),A°¶±¶° 	CP	B°¶±·° 	JR	Z,LEM°¶±¸° 	INC	HL°¶±¹° 	INC	DE°¶²°° 	JR	MVLP°¶²±° LEM	POP	BC°¶²²° 	RET°¶²³° ;CHECK IF INPUT IS "INVENTORY" COMAND°¶²´° CHECK	LD	HL,INV°¶²µ° 	LD	DE,BUFFER°¶²¶° 	CALL	CMPR°¶²·° 	RET	NZ		;IF NOT RETURN°¶²¸° 	LD	HL,PRO°¶²¹° 	LD	BC,00°¶³°° 	LD	A,0DEH°¶³±° 	CPIR			;FIND INVENTORY LIST°¶³²° 	LD	A,(HL)°¶³³° 	CP	0FFH°¶³´° 	JR	NZ,CKLOP°¶³µ° 	LD	HL,NCA		;? YOU'RE NOT CARRY...°¶³¶° 	CALL	PRINT°¶³·° 	RET°¶³¸° CKLOP	LD	A,(HL)°¶³¹° 	CP	0FFH		;END MARKER°¶´°° 	RET	Z°¶´±° 	CALL	33H		;PRINT CHAR°¶´²° 	INC	HL°¶´³° 	JR	CKLOP°¶´´° ;INPUT ROUTINE°¶´µ° ;SAVES INPUT @ BUFFER°¶´¶° INPUT	PUSH	HL°¶´·° 	PUSH	AF°¶´¸° 	PUSH	IX°¶´¹° 	PUSH	IY		;SAVE REGS.°¶µ°° 	LD	HL,BUFFER	;LOCATION OF BUFFER°¶µ±° KEY	CALL	2BH		;SCAN KEYBORD°¶µ²° 	OR	A		;IF ZERO°¶µ³° 	JR	Z,KEY		;SCAN AGAIN°¶µ´° 	CP	08H		;CHECK IF BACK ARROW°¶µµ° 	JR	NZ,MAIN		;IF NOT SKIP THIS PART°¶µ¶° 	DEC	HL		;BACK UP POINTER°¶µ·° 	CALL	33H		;PRINT BACK SPACE°¶µ¸° 	JR	KEY		;GET NEXT KEY°¶µ¹° MAIN	LD	(HL),A		;SAVE CHAR. IN BUFFER°¶¶°° 	INC	HL		;BUMP POINTER°¶¶±° 	CALL	33H°¶¶²° 	CP	0DH		;CR?°¶¶³° 	JR	NZ,KEY		;IF NOT GET NEXT KEY°¶¶´° 	POP	IY°¶¶µ° 	POP	IX°¶¶¶° 	POP	AF°¶¶·° 	POP	HL°¶¶¸° 	RET°¶¶¹° ;PRINT SUB°¶·°° ;PRINTS MESSAGE @HL INTILL 0°¶·±° PRINT	PUSH	AF°¶·²° 	PUSH	DE°¶·³° 	PUSH	IY°¶·´° 	PUSH	HL		;SAVE°¶·µ° PR1	LD	A,(HL)		;GET CURRENT CHAR°¶·¶° 	CP	0		;ZERO?°¶··° 	JR	Z,SAVE		;IF YES RETURN°¶·¸° 	CALL	33H°¶·¹° 	INC	HL		;BUMP POINTER°¶¸°° 	JR	PR1		;PRINT NEXT CHAR.°¶¸±° SAVE	POP	HL°¶¸²° 	POP	IY°¶¸³° 	POP	DE°¶¸´° 	POP	AF°¶¸µ° 	RET°¶¸¶° ;COMPARE SUB°¶¸·° ;COMPARES STRING @HL TO STRING @ DE°¶¸¸° ;HL MUST BE FOLLOWED BY ZERO OR CR, NOT NESSESARY FOR DE°¶¸¹° CMPR	CALL	LEN		;GET LENGTH OF HL°¶¹°° CMPR2	LD	A,(DE)		;GET 1ST CHAR.°¶¹±° 	CP	(HL)		;CMPR W/ 2ND CHAR.°¶¹²° 	JR	NZ,BAD		;IF NO GOOD, GO BAD°¶¹³° 	INC	HL°¶¹´° 	INC	DE		;BUMP POINTERS°¶¹µ° 	DEC	BC°¶¹¶° 	LD	A,0		;NO TO CP°¶¹·° 	CP	B°¶¹¸° 	JR	NZ,CMPR2°¶¹¹° 	CP	C°·°°° 	JR	NZ,CMPR2°·°±° 	JR	GOOD°·°²° BAD	LD	A,0FFH°·°³° 	OR	A		;RESET ZERO FLAG°·°´° 	RET°·°µ° GOOD	LD	A,0		;SET°·°¶° 	OR	A		;ZERO FLAG°·°·° 	RET°·°¸° ;INSTRING SUB°·°¹° ;LOOKS FOR STRING AT HL IN STRING DE°·±°° INSTR	LD	A,(DE)		;SEE IF°·±±° ALT	LD	B,0FDH		;END OF°·±²° 	CP	B		;STRING°·±³° 	JR	Z,NOGO		;END OF STRING-NO GO°·±´° 	PUSH	HL		;SAVE CURRENT POS.°·±µ° 	PUSH	DE°·±¶° 	CALL	CMPR		;COMPARE°·±·° 	POP	DE°·±¸° 	POP	HL		;GET OLD POS.°·±¹° 	RET	Z°·²°° 	INC	DE°·²±° 	JR	INSTR°·²²° NOGO	LD	A,0FFH°·²³° 	OR	A°·²´° 	RET°·²µ° ;LENGTH°·²¶° ;ON RET: BC=LENGTH OF STRING AT HL°·²·° LEN	PUSH	HL		;SAVE AT HL°·²¸° 	LD	C,0		;CLEAR°·²¹° 	LD	B,0		;BC°·³°° LOP	LD	A,0°·³±° 	CP	(HL)°·³²° 	JR	Z,LFIN°·³³° 	LD	A,0DH°·³´° 	CP	(HL)°·³µ° 	JR	Z,LFIN°·³¶° 	INC	HL°·³·° 	INC	BC°·³¸° 	JR	LOP°·³¹° LFIN	POP	HL°·´°° 	RET°·´±° ;CONVERT INPUT INTO A 2 DIGET HEX NO.°·´²° CON1	LD	DE,(BUFFER)°·´³° CON2	LD	A,D°·´´° 	SBC	A,48		;CONVERT D TO BCD°·´µ° 	LD	D,A		;SAVE°·´¶° 	LD	A,E		;GET HIGH BYTE°·´·° 	SBC	A,48		;CONVERT TO BCD°·´¸° 	PUSH	BC		;SAVE BC°·´¹° 	LD	B,9°·µ°° 	LD	E,A		;MULTIPLE BY TEN°·µ±° CVLP	ADD	A,E°·µ²° 	DJNZ	CVLP°·µ³° 	ADD	A,D		;ADD ONES°·µ´° 	POP	BC°·µµ° 	RET°·µ¶° ;SEARCHES PROGRAM FOR ROOM IN REG "A"°·µ·° ;RETURNS POS IN HL°·µ¸° SEARCH	LD	HL,PRO		;PROGRAM START POS°·µ¹° 	PUSH	BC°·¶°° SLP	LD	BC,0°·¶±° 	CPIR°·¶²° 	PUSH	AF		;SAVE°·¶³° 	LD	A,0FDH		;DATA FOR ROOM MARKER°·¶´° 	CP	(HL)°·¶µ° 	JR	Z,LAB°·¶¶° 	POP	AF°·¶·° 	JR	SLP°·¶¸° LAB	POP	AF°·¶¹° 	INC	HL		;POINT TO TEXT°··°° 	POP	BC		;GET BC°··±° 	RET°··²° ;MOVES MEMORY BC PLACES DOWN°··³° MOVE	PUSH	HL°··´° 	PUSH	BC°··µ° 	PUSH	DE°··¶° 	PUSH	HL°···° 	CALL	FEND		;FIND END OF PROGRAM°··¸° 	PUSH	HL		;SAVE SORCE°··¹° 	ADD	HL,BC		;DECTINATION°·¸°° 	EX	DE,HL°·¸±° 	POP	HL°·¸²° 	POP	BC°·¸³° 	PUSH	HL		;SAVE IT AGAIN°·¸´° 	SBC	HL,BC		;GET AMOUNT TO MOVE°·¸µ° 	PUSH	HL		;MOVE HL°·¸¶° 	POP	BC		;INTO BC°·¸·° 	POP	HL		;GET SORCE°·¸·µ 	INC	BC°·¸¸° 	LDDR			;MOVE MEMORY°·¸¹° 	POP	DE°·¹°° 	POP	BC°·¹±° 	POP	HL°·¹²° 	RET°·¹³° ;FIND END.... FIND'S THE END OF THEPROGRAM°·¹´° FEND	PUSH	BC°·¹µ° 	PUSH	AF°·¹¶° 	LD	BC,00°·¹·° 	LD	HL,PRO°·¹¸° 	LD	A,0FFH		;END OF PROGRAM MARKER°·¹¹° 	CPIR			;FIND IT +1°¸°°° 	DEC	HL		;TRUE END°¸°±° 	POP	AF°¸°²° 	POP	BC°¸°³° 	RET°¸°´° BUFFER	DEFS	128		;INPUT BUFFER°¸°µ° M1	DEFM	'ADVENTURE INTERPRETER   VER. 1.0'°¸°¶° 	DEFB	10°¸°·° 	DEFM	'BY ANTHONY WOOD   JULY 1981'°¸°¸° 	DEFW	0010°¸°¹° DATA	DEFM	'DATA'°¸±°° 	DEFB	00°¸±±° RM	DEFM	'WHAT ROOM NUMBER? '°¸±²° 	DEFB	00°¸±³° ERROR	DEFM	'?FORM ERROR'°¸±´° 	DEFW	0010°¸±µ° M2	DEFM	'OK, ENTER DATA:'°¸±¶° 	DEFW	0010°¸±·° GO	DEFM	'GO'°¸±¸° 	DEFB	00°¸±¹° POINT	DEFW	PRO°¸²°° LST	DEFM	'LIST'°¸²±° 	DEFB	00°¸²²° RSRH	DEFS	2		;WHATS THIS???°¸²³° 	DEFB	00°¸²´° NSEW	DEFW	0101H°¸²µ° 	DEFW	0101H°¸²¶° NO	DEFB	01°¸²·° TY:	DEFM	'TY:'°¸²¸° 	DEFB	00°¸²¹° RTN	DEFM	'RET'°¸³°° 	DEFB	00°¸³±° VB:	DEFM	'VB:'°¸³²° 	DEFB	00°¸³³° DONT	DEFM	'I DON'°¸³´° 	DEFB	39D°¸³µ° 	DEFM	'T UNDERSTAND.'°¸³¶° 	DEFW	0010°¸³·° IPLUS	DEFM	'IN+'°¸³¸° 	DEFB	00°¸³¹° IMIN	DEFM	'IN-'°¸´°° 	DEFB	00°¸´±° NCA	DEFM	'YOU'°¸´²° 	DEFB	39D°¸´³° 	DEFM	'RE NOT CARRYING ANYTHING.'°¸´´° 	DEFW	0010°¸´µ° INV	DEFM	'INV'°¸´¶° 	DEFB	00°¸´·° RMP	DEFM	'RM+'°¸´¸° 	DEFB	00°¸´¹° RMN	DEFM	'RM-'°¸µ°° 	DEFB	00°¸µ±° POSNEG	DEFS	1D°¸µ²° ND	DEFM	'N$'°¸µ³° 	DEFB	00°¸µ´° CP	DEFM	'CP N$:'°¸µµ° 	DEFB	00°¸µ¶° PF	DEFM	'P:'°¸µ·° 	DEFB	00°¸µ¸° NF	DEFM	'N:'°¸µ¹° 	DEFB	00°¸¶°° INVCK	DEFM	'CP I$:'°¸¶±° 	DEFB	00°¸¶²° ROM	DEFM	'CP R$:'°¸¶³° 	DEFB	00°¸¶´° JMP	DEFM	'JP:'°¸¶µ° 	DEFB	00°¸¶¶° REQ	DEFM	'RM='°¸¶·° 	DEFB	0°¸¶¸° LABAL	DEFM	'?RM='°¸¶¹° 	DEFB	00°¸·°° PT2	DEFW	PRO°¸·°± ED	DEFM	'EDIT'°¸·°² 	DEFB	00°¹°°° PRO	DEFB	00°¹°±° 	DEFB	0FFH°¹°²° 	END	8000H                                                                 