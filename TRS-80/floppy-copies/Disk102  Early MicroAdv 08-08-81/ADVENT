ÓADVENT°°°¹° *LIST OFF°°±°° 	ORG	8000H°°±°µ 	CALL	01C9H		;CLEAR SCREEN°°±°· ;	3BH IS OUPUT TO PRINTER°°±±° 	LD	HL,INTRO°°±²° 	CALL	PRINT1°°±²² 	LD	A,0EH°°±²´ 	CALL	33H		;TURN ON CURSER°°±³° START	LD	A,94D		;ARROW CHARECTER°°±´° 	CALL	33H		;PRINT @ CURSOR°°±µ° 	CALL	INPUT°°±¶° 	LD	HL,ED°°±·° 	LD	DE,BUFFER°°±¹° 	JR	Z,START°°²°° 	LD	HL,DATA°°²±° 	CALL	CMPR		;IS IT "DATA"°°²²° 	JP	Z,DAT°°²³° 	LD	HL,LIST°°²´° 	CALL	CMPR		;IS IT "LIST"°°²µ° 	JP	Z,LST°°²¶° 	LD	HL,PR		;P:RET°°²¶³ 	CALL	CMPR°°²¶¶ 	JR	NZ,MINK°°²¶¹ 	LD	A,10H°°²·² 	CALL	STORE°°²·µ 	JP	START°°²·¶ MINK	LD	HL,NR		;N:RET°°²·· 	CALL	CMPR°°²·¸ 	JR	NZ,NIM°°²·¹ 	LD	A,11H°°²¸° 	CALL	STORE°°²¸± 	JP	START°°²¸µ NIM	LD	B,00		;START OF PRO COMAND CODE°°²¹° 	LD	HL,POS		;IS IT "P:"°°²¹µ 	CALL	CMPR°°³°° 	JR	NZ,NEXT1°°³³° 	LD	B,20H		;SET BIT 5°°³´° 	JR	NXT1A°°³µ° NEXT1	LD	HL,NEG		;IS IT "N:"°°³¶° 	CALL	CMPR°°³·° 	JR	NZ,NEXT2°°³¸° 	LD	B,40H		;SET BIT 6°°³¹° NXT1A	INC	DE°°´°° 	INC	DE°°´±° NEXT2	LD	HL,VB°°´²° 	CALL	CMPR		;IS IT "VB:" COMAND°°´³° 	JR	NZ,NEXT3°°´´° 	LD	A,0		;VB CODE NO.°°´µ° 	OR	B		;ADD "RNP"°°´¶° 	CALL	STORE		;SAVE CODE NO.°°´·° 	INC	DE°°´¸° 	INC	DE°°´¹° 	INC	DE		;POINT TO "XXXYYY...ZZZ"°°µ°° 	CALL	STORE2		;SAVE°°µ°µ 	JR	START°°µ±° NEXT3	LD	HL,TY		; "TY:"°°µ±µ 	CALL	CMPR°°µ²° 	JR	NZ,NEXT4°°µ³° 	LD	A,01		;CODE FOR TYPE°°µ´° 	OR	B°°µµ° 	CALL	STORE°°µ¶° 	INC	DE°°µ·° 	INC	DE°°µ¸° 	INC	DE°°µ¹° 	CALL	STORE2°°¶°° 	JP	START°°¶±° NEXT4	LD	HL,RTN		;"RET"°°¶²° 	CALL	CMPR°°¶³° 	JR	NZ,NEXT5°°¶´° 	LD	HL,(POINT2)	;POINT TO LAST COMAND°°¶´µ 	DEC	HL°°¶µ° 	SET	7,(HL)°°¶¶° 	JP	START°°¶·° NEXT5	LD	HL,CP1°°¶¸° 	CALL	CMPR°°¶¹° 	JR	NZ,NEXT6°°·°° 	LD	A,02°°·±° NXT5A	OR	B°°·²° 	CALL	STORE°°·³° NXT5B	INC	DE°°·´° 	INC	DE°°·µ° 	INC	DE°°·¶° 	INC	DE°°··° 	INC	DE°°·¸° 	INC	DE°°·¹° 	CALL	STORE2°°¸°° 	JP	START°°¸±° NEXT6	LD	HL,CP3		; "CP I$:N$"°°¸²° 	CALL	CMPR°°¸³° 	JR	NZ,NEXT7°°¸´° 	LD	A,04°°¸µ° 	OR	B°°¸¶° 	CALL	STORE°°¸·° 	LD	HL,(POINT)°°¸¸° 	INC	(HL)°°¸¸µ 	LD	(HL),0FFH°°¸¹° 	JP	START°°¹°° NEXT7	LD	HL,CP5		;"CP R$:N$"°°¹±° 	CALL	CMPR°°¹²° 	JR	NZ,NEXT8°°¹³° 	LD	A,06°°¹´° 	OR	B°°¹µ° 	CALL	STORE°°¹¶° 	LD	HL,(POINT)°°¹·° 	INC	(HL)°°¹·µ 	LD	(HL),0FFH°°¹¸° 	JP	START°°¹¹° NEXT8	LD	HL,CP2		;"CP I$:XXX"°±°°° 	CALL	CMPR°±°±° 	JR	NZ,NEXT9°±°²° 	LD	A,03°±°³° 	JR	NXT5A°±°´° NEXT9	LD	HL,CP4		;"CP R$:XXX"°±°µ° 	CALL	CMPR°±°¶° 	JR	NZ,NEXT10°±°·° 	LD	A,05D°±°¸° 	OR	B°±°¹° 	CALL	STORE°±°¹µ 	JR	NXT5B°±±°° NEXT10	CALL	OOPPS		;IS IN+N$,RM$+N$,ETC°±±°µ 	LD	HL,INP°±±±° 	CALL	CMPR		; "IN+"°±±²° 	JR	NZ,NEXT11°±±³° 	LD	A,07°±±´° 	OR	B°±±µ° 	CALL	STORE°±±¶° 	INC	DE°±±·° 	INC	DE°±±¸° 	INC	DE°±²°µ 	CALL	STORE2°±²±° 	JP	START°±²²° NEXT11	LD	HL,INM°±²³° 	CALL	CMPR		;"IN-"°±²´° 	JR	NZ,NEXT12°±²µ° 	LD	A,08°±²¶° 	OR	B°±²·° 	CALL	STORE°±²¸° 	INC	DE°±²¹° 	INC	DE°±³±° 	INC	DE°±³²µ 	CALL	STORE2°±³³° 	JP	START°±³´° NEXT12	LD	HL,RMP°±³µ° 	CALL	CMPR		;"RM+"°±³¶° 	JR	NZ,NEXT13°±³·° 	LD	A,09°±³¸° 	OR	B°±³¹° 	CALL	STORE°±´°° 	INC	DE°±´±° 	INC	DE°±´³° 	INC	DE°±´´µ 	CALL	STORE2°±´µ° 	JP	START°±´¶° NEXT13	LD	HL,RMM°±´·° 	CALL	CMPR°±´¸° 	JR	NZ,NEXT14°±´¹° 	LD	A,0AH°±µ°° 	OR	B°±µ±° 	CALL	STORE°±µ²° 	INC	DE°±µµ° 	INC	DE°±µµµ 	INC	DE°±µ¶µ 	CALL	STORE2°±µ·° 	JP	START°±µ¸° NEXT14	LD	HL,JMP°±µ¹° 	CALL	CMPR		;"JP:##"°±¶°° 	JR	NZ,NEXT15°±¶±° 	INC	DE°±¶³° 	INC	DE°±¶³µ 	INC	DE°±¶´° 	LD	A,0BH°±¶µ° 	OR	B°±¶¶° 	CALL	STORE°±¶·° 	CALL	CON1°±¶¸° 	CALL	STORE°±·³° 	JP	START°±·´° NEXT15	LD	HL,RME°±·µ° 	CALL	CMPR		;"RM=XX"°±·¶° 	JR	NZ,NEXT16°±··° 	LD	A,0CH°±·¸° 	OR	B°±·¹° 	CALL	STORE°±¸°° 	INC	DE°±¸±° 	INC	DE°±¸²° 	INC	DE°±¸³° 	CALL	CON1°±¸´° 	CALL	STORE°±¸¶° 	JP	START°±¸·° NEXT16	LD	HL,RMS°±¸¸° 	CALL	CMPR		;"?RM=##"°±¸¹° 	JR	NZ,NEXT17°±¹°° 	LD	A,0DH°±¹±° 	OR	B°±¹²° 	CALL	STORE°±¹³° 	INC	DE°±¹´° 	INC	DE°±¹µ° 	INC	DE°±¹¶° 	INC	DE°±¹·° 	CALL	CON1°±¹¸° 	CALL	STORE°±¹¹° 	JP	START°²°°° NEXT17	LD	A,(BUFFER)°²°±° 	CP	'*'°²°²° 	JR	NZ,NEXT18°²°³° 	LD	A,0EH°²°´° 	OR	B°²°µ° 	CALL	STORE°²°¶° 	INC	DE°²°·° 	CALL	CON1°²°¸° 	CALL	STORE°²°¹° 	JP	START°²±°° NEXT18	LD	HL,ER1		;"ILLEGAL COMAND"°²±±° 	CALL	PRINT1°²±²° 	JP	START°²±´° DAT	LD	HL,HOW°²±µ° 	CALL	PRINT1		;PRINT "WHAT ROOM NUMBER?°²±¶° 	CALL	INPUT°²±·° 	LD	DE,BUFFER°²±¸° 	CALL	CON1°²±¸² 	LD	HL,ENT°²±¸´ 	CALL	PRINT1		;? "ENTER DATA:"°²±¸¶ 	CALL	INPUT°²±¸· 	PUSH	AF°²±¸¸ 	EX	AF,AF'°²±¸¹ 	CALL	CON2°²±¹° 	EX	AF,AF'°²±¹µ 	CALL	SEARCH°²²°° 	JR	NZ,NEWRM	;ROOM NOT FOUND°²²±° 	LD	A,0DAH°²²±³ 	PUSH	HL°²²±´ 	PUSH	HL°²²±µ 	INC	HL°²²²° 	CPIR			;FIND NEXT DATA+2°²²³° 	DEC	HL°²²´° 	DEC	HL°²²µ° 	POP	DE°²²¶° 	DEC	DE°²²·° 	CALL	MOVE1°²²¸° 	POP	HL		;GET BACK°²²¹° NEWRM	CALL	FEND		;POINTS HL TO "FFH"°²²¹² 	POP	AF		;GET ROOM NO°²²¹´ 	LD	(HL),A°²²¹¶ 	LD	A,0DAH		;DATA MARKER°²²¹¸ 	INC	HL°²²¹¹ 	LD	(HL),A°²³°° 	INC	HL°²³°² 	LD	DE,BUFFER°²³±° 	EX	DE,HL°²³²° 	CALL	LEN°²³³° 	LDIR			;MOVE DATA°²³³µ 	EX	DE,HL°²³´° 	LD	(HL),0FFH	;END MARKER°²³µ° 	JP	START°²³¸° LST	LD	HL,PRO°²³¸µ RED1	CALL	TIME		;DELAY°²³¸¶ 	CALL	CHK1°²³¸· 	JP	Z,RED2°²³¹° 	LD	A,(HL)°²´°° 	BIT	5,A°²´±° 	JR	Z,DUCK1°²´±µ 	PUSH	HL°²´²° 	LD	HL,POS°²´³° 	CALL	PRINT1°²´³µ 	POP	HL°²´µ° 	JP	DUCK2°²´¶° DUCK1	BIT	6,A°²´·° 	JR	Z,DUCK2°²´¹° 	PUSH	HL°²µ°° 	LD	HL,NEG°²µ±° 	CALL	PRINT1°²µ²° 	POP	HL°²µ´° DUCK2	LD	B,15D°²µµ° 	AND	B°²µ¶° 	CP	00°²µ·° 	JR	NZ,DUCK3°²µ¹° 	LD	DE,VB		;VB:°²¶°° 	CALL	LSUB°²¶´° 	JP	RED3		;RED 3 FINDS 0DH°²¶µ° DUCK3	CP	01°²¶¶° 	JR	NZ,DUCK4°²¶·° 	PUSH	HL°²¶¸° 	LD	HL,TY°²¶¹° 	CALL	PRINT1°²·°° 	POP	HL°²·±° 	INC	HL°²·²° 	CALL	PRINT1°²·³° 	JP	RED3°²·´° DUCK4	CP	02°²·µ° 	JR	NZ,DUCK5°²·¶° 	PUSH	HL°²··° 	LD	HL,CP1		;CP N$:XXX°²·¸° 	CALL	PRINT1°²·¹° 	POP	HL°²¸°° 	INC	HL°²¸±° 	CALL	PRINT1°²¸²° 	JP	RED3°²¸³° DUCK5	CP	03°²¸´° 	JR	NZ,DUCK6°²¸µ° 	PUSH	HL°²¸¶° 	LD	HL,CP2		;CP I$:XXX°²¸·° 	CALL	PRINT1°²¸¸° 	POP	HL°²¸¹° 	INC	HL°²¹°° 	CALL	PRINT1°²¹±° 	JP	RED3°²¹²° DUCK6	CP	04°²¹³° 	JR	NZ,DUCK7°²¹´° 	PUSH	HL°²¹µ° 	LD	HL,CP3°²¹µ² 	CALL	PRINT1°²¹µ´ 	POP	HL°²¹¶° 	JP	RED2°²¹·° DUCK7	CP	05°²¹¸° 	JR	NZ,DUCK8°²¹¹° 	LD	DE,CP4°³°°° 	CALL	LSUB°³°±° 	JP	RED3°³°²° DUCK8	CP	06°³°³° 	JR	NZ,DUCK9°³°´° 	PUSH	HL°³°´² 	LD	HL,CP5°³°µ° 	CALL	PRINT1°³°µ² 	POP	HL°³°¶° 	JP	RED2°³°·° DUCK9	CP	07°³°¸° 	JR	NZ,DUCK10°³°¹° 	LD	DE,INP°³±°° 	CALL	LSUB°³±±° 	JP	RED3°³±²° DUCK10	CP	08D°³±³° 	JR	NZ,DUCK11°³±´° 	LD	DE,INM		;IN-°³±µ° 	CALL	LSUB°³±¶° 	JP	RED3°³±·° DUCK11	CP	09D°³±¸° 	JR	NZ,DUCK12°³±¹° 	LD	DE,RMP		;RM+°³²°° 	CALL	LSUB°³²±° 	JP	RED3°³²²° DUCK12	CP	0AH°³²³° 	JR	NZ,DUCK13°³²´° 	LD	DE,RMM		;RM-°³²µ° 	CALL	LSUB°³²¶° 	JR	RED3°³²·° DUCK13	CP	0BH°³²¸° 	JR	NZ,DUCK14°³²¹° 	PUSH	HL°³³°° 	LD	HL,JMP		;JP:°³³±° 	CALL	PRINT1°³³²° 	POP	HL°³³³° 	JP	RED6°³³·° DUCK14	CP	0CH°³³¸° 	JR	NZ,DUCK15°³³¹° 	PUSH	HL°³´°° 	LD	HL,RME		;RM=°³´±° 	CALL	PRINT1°³´²° 	POP	HL°³´³° 	JR	RED6°³´·° DUCK15	CP	0DH°³´¸° 	JR	NZ,DUCK16°³´¹° 	PUSH	HL°³µ°° 	LD	HL,RMS°³µ±° 	CALL	PRINT1°³µ²° 	POP	HL°³µ³° 	JR	RED6°³µ·° DUCK16	LD	A,'*'°³µ¸° 	CALL	33H		;PRINT "*"°³µ¹° 	INC	HL°³¶°° 	LD	A,(HL)°³¶±° 	CALL	CON3°³¶±µ RED2	CALL	RSUB		;PRINT "RET"°³¶²° 	INC	HL°³¶²² 	LD	A,10°³¶²´ 	CALL	33H°³¶³° 	LD	A,0FFH		;END OF PRO MARKER°³¶´° 	CP	(HL)°³¶µ° 	JP	NZ,RED1		;IF NOT END THEN JUMP°³¶¸° 	JP	START°³¶¸µ RED3	DEC	HL°³¶¸¸ 	CALL	RSUB°³¶¹° RED5	LD	A,(HL)°³·²° 	CP	0DH		;END OF COMAND?°³·³° 	JR	Z,ECM°³·´° 	INC	HL°³·µ° 	JR	RED5°³·µ² ECM	LD	A,10		;LINE FEED°³·µ´ 	CALL	33H°³·¶° 	INC	HL		;POINT TO NEXT COMAND°³·¶² 	LD	A,0FFH°³·¶´ 	CP	(HL)°³·¶¶ 	JP	NZ,RED1°³·¸° RED4	LD	A,10		;LINE FEED°³·¹° 	CALL	33H°³¸°° 	JP	START°³¸±° RED6	INC	HL		;POINT TO NUMBER°³¸±µ 	LD	A,(HL)		;GET NO. TO PRINT°³¸²° 	CALL	CON3		;PRINT NO.°³¸³° 	DEC	HL		;POINT TO COMAND°³¸´° 	CALL	RSUB		;PRINT RET IF THERE IS 1°³¸µ° 	INC	HL°³¸¶° 	INC	HL		;POINT TO NEXT COMAND°³¸·° 	LD	A,10°³¸¸° 	CALL	33H°³¸¹° 	LD	A,(HL)		;GET NEXT COMAND°³¹°° 	CP	0FFH		;IS IT END IF PROGRAM?°³¹±° 	JP	Z,START°³¹²° 	CP	0DEH		;IS IT START OF DATA?°³¹³° 	JP	Z,START		;IF YES STOP°³¹´° 	JP	RED1°¶°°° ;	STORE°¶°±° ;	SAVES BYTE IN REG "A" AT CURRENT "POINT" POS.°¶°²° STORE	PUSH	AF°¶°´° 	PUSH	HL°¶°µ° 	LD	HL,(POINT)°¶°µµ 	LD	(POINT2),HL°¶°¶° 	LD	(HL),A°¶°·° 	INC	HL°¶°¸° 	LD	(HL),0FFH		;END OF PROGRAM°¶°¹° 	LD	(POINT),HL°¶±°° 	POP	HL°¶±±° 	POP	AF°¶±²° 	RET°¶±³° STORE2	PUSH	HL°¶±´° 	PUSH	DE°¶±µ° 	LD	HL,(POINT)°¶±µµ 	LD	(POINT2),HL°¶±¶° LOOP	LD	A,(DE)°¶±·° 	LD	(HL),A°¶±¸° 	CP	0DH		;CR°¶±¹° 	JR	Z,REST°¶²°° 	INC	HL°¶²±° 	INC	DE°¶²²° 	JR	LOOP°¶²³° REST	INC	HL°¶²³± 	LD	(HL),0FFH°¶²³² 	LD	(POINT),HL°¶²³´ 	POP	DE°¶²´° 	POP	HL°¶²µ° 	RET°¶²¶° ;CONVERTS ITEM POINTED TO BY DE FROM 2DIGET ASCII°¶²·° ;TO A 1 DIGET HEX.°¶²¸° CON1	PUSH	HL°¶²¹° 	PUSH	DE°¶³°° 	PUSH	BC°¶³±° 	EX	DE,HL°¶³²° 	LD	E,(HL)°¶³²² 	INC	HL°¶³²´ 	LD	D,(HL)°¶³³° 	LD	A,D°¶³´° 	SUB	48		;CONVERT D TO BCD°¶³µ° 	LD	D,A		;SAVE°¶³¶° 	LD	A,E		;GET HIGH BYTE°¶³·° 	SUB	48°¶³¸° 	LD	B,9°¶³¹° 	LD	E,A°¶´°° CVLP	ADD	A,E°¶´±° 	DJNZ	CVLP°¶´²° 	ADD	A,D°¶´³° 	POP	BC°¶´´° 	POP	DE°¶´µ° 	POP	HL°¶´¶° 	RET°¶´·° ;	INPUT: RETURNS INPUT IN "BUFFER" LOCATION°¶´¸° INPUT	PUSH	HL°¶´¹° 	PUSH	AF°¶µ°° 	LD	HL,BUFFER°¶µ±° KEY	CALL	2BH		;SCAN KEYBORD°¶µ²° 	OR	A°¶µ³° 	JR	Z,KEY		;IF KEY NOT PRESED, GO°¶µ´° 	CP	08		;CHECK IF BACK ARROW°¶µµ° 	JR	NZ,MAIN		;IF NOT SKIP THIS PART°¶µ¶° 	DEC	HL		;BACK UP POINTER°¶µ·° 	CALL	33H		;PRINT BACK SPACE°¶µ¸° 	JR	KEY°¶µ¹° MAIN	LD	(HL),A		;SAVE CHAR IN BUFFER°¶¶°° 	INC	HL		;BUMP POINTER°¶¶±° 	CALL	33H°¶¶²° 	CP	0DH		;CR?°¶¶³° 	JR	NZ,KEY		;IF NOT GET NEXT KEY°¶¶´° 	POP	AF°¶¶µ° 	POP	HL°¶¶¶° 	RET°¶¶·° ;	PRINT1 : FOR INTERPRETER, NOT RUNING PROGRAM°¶¶¸° PRINT1	PUSH	AF°¶¶¹° 	PUSH	DE°¶·°° 	PUSH	IY°¶·±° 	PUSH	HL		;SAVE°¶·²° PR1	LD	A,(HL)		;GET CURRENT CHAR°¶·³° 	CP	00°¶·´° 	JR	Z,PSAVE		;IF YES, RETURN°¶·´² 	CP	0DH		;END MARKER°¶·´´ 	JR	Z,PSAVE°¶·µ° 	CALL	33H°¶·¶° 	INC	HL		;BUMP POINTER°¶··° 	JR	PR1°¶·¸° PSAVE	POP	HL°¶·¹° 	POP	IY°¶¸°° 	POP	DE°¶¸±° 	POP	AF°¶¸²° 	RET°¶¸³° ;COMPARE SUB°¶¸´° ;COMPARES STRING @ HL TO STRING @DE°¶¸µ° ;HL MUST BE FOLLOWED BY ZERO OR CR, NOT NESSASERY FOR DE°¶¸¶° CMPR	PUSH	DE		;SAVE°¶¸¶µ 	PUSH	BC°¶¸·° 	CALL	LEN		;LENGTH OH HL°¶¸¸° CMPR2	LD	A,(DE)		;GET 1ST CHAR.°¶¸¹° 	CP	(HL)		;CMPR W/ 2ND CHAR.°¶¹°° 	JR	NZ,BAD°¶¹±° 	INC	HL°¶¹²° 	INC	DE°¶¹³° 	DEC	BC°¶¹´° 	LD	A,0°¶¹µ° 	CP	B°¶¹¶° 	JR	NZ,CMPR2°¶¹·° 	CP	C°¶¹¸° 	JR	NZ,CMPR2°¶¹¹° 	JR	GOOD°·°°° BAD	LD	A,0FFH°·°±° 	OR	A°·°±µ 	POP	BC°·°±· 	POP	DE°·°²° 	RET°·°³° GOOD	LD	A,0°·°´° 	OR	A°·°´µ 	POP	BC°·°´· 	POP	DE°·°µ° 	RET°·°¶° ;INSTRING SUB°·°·° ;LOOKS FOR STRING AT HL IN STRING DE°·°¸° INSTR	LD	A,(DE)		;SEE°·°¹° 	LD	B,0FDH		;IF END OF°·±°° 	CP	B		;STRING°·±±° 	JR	Z,NOGO°·±²° 	PUSH	HL°·±³° 	CALL	CMPR°·±´° 	POP	HL°·±µ° 	RET	Z°·±¶° 	INC	DE°·±·° 	JR	INSTR°·±¸° NOGO	LD	A,0FFH°·±¹° 	OR	A°·²°° 	RET°·²±° ;LENGTH°·²²° ;RETURNS IN BC LENGTH OF STRING AT HL°·²³° LEN	PUSH	HL		;SAVE°·²´° 	LD	C,0		;CLEAR BC°·²µ° 	LD	B,0°·²¶° LOP	LD	A,0°·²·° 	CP	(HL)°·²¸° 	JR	Z,LFIN°·²¹° 	LD	A,0DH°·³°° 	CP	(HL)°·³±° 	JR	Z,LFIN°·³²° 	INC	HL°·³³° 	INC	BC°·³´° 	JR	LOP°·³µ° LFIN	POP	HL°·³¶° 	RET°·³·° ;FIND END	RETURNS END OF PROGRAM (POS. 0FFH)°·³¹° FEND	PUSH	AF°·´°° 	PUSH	BC°·´±° 	LD	BC,00		;SEARCH 64K°·´²° 	LD	A,0FFH		;END OF PROGRAM MARKER°·´³° 	LD	HL,PRO		;PROGRAM START POS°·´´° 	CPIR°·´µ° 	DEC	HL		;POINT TO 0FFH°·´¶° 	POP	BC°·´·° 	POP	AF°·´¹° 	RET°·µ°° ;MOVE1		MOVES PROGRAM FROM HL TO DE INTILL FF°·µ±° ;1ST CHAR. POINTED AT BY HL°·µ²° MOVE1	PUSH	BC°·µ³° 	PUSH	AF°·µ´° 	PUSH	HL°·µµ° 	PUSH	DE°·µ¶° MV1	LD	A,(HL)°·µ·° 	LD	(DE),A°·µ¸° 	CP	0FFH°·µ¹° 	JR	Z,MVFIN°·¶°° 	INC	DE°·¶±° 	INC	HL°·¶²° 	JR	MV1°·¶³° MVFIN	POP	DE°·¶´° 	POP	HL°·¶µ° 	POP	AF°·¶¶° 	POP	BC°·¶·° 	RET°·¶¸° ;SEARCH - FINDS ROOM IN REG "A"°·¶¹° ;ALL ROOMS ARE MARKED BY A "DA" AFTER OF RM#°··°° SEARCH	LD	E,A		;SAVE A°··±° 	LD	HL,PRO		;BEGINING OF PROGRAM°··²° 	LD	BC,16000	;SEARCH 16K°··³° SLP	LD	A,E		;GET RM#°··´° SLP2	CPI			;SEARCH FOR "A"REG°··µ° 	RET	PO		;JUMP IF NOT FOUND°··¶° 	JR	Z,MAYBE°···° 	JR	SLP2°··¸° MAYBE	LD	A,0DAH°··¹° 	CP	(HL)°·¸°° 	JR	NZ,SLP°·¸²° 	RET			;ZERO FLAG SET IF FOUND°·¸µ° ;CON2 - CHANGES NUMBERS IN INPUT FROM ASCII TO HEX°·¸¶° ;°·¸·° ;PUT SOME "PUSHES" HERE°·¸¸° CON2	LD	HL,BUFFER°·¸¹° 	LD	BC,128°·¹°° 	LD	A,'@'°·¹±° 	CPIR			;HL POINTS TO 1ST #°·¹²° 	JP	PO,NEWIN	;BAD DATA, RE-ENTER°·¹³° 	EX	DE,HL		;DE MUST POINT TO 1ST NO.°·¹´° 	PUSH	DE		;SAVE°·¹µ° 	LD	HL,TEMP		;JUST A 4 BYTE MEM POS°·¹¶° HERE	CALL	CON1°·¹·° 	LD	(HL),A°·¹¸° 	INC	DE°·¹¸µ 	INC	DE°·¹¹° 	EX	DE,HL°¸°°° 	LD	A,0DH		;END MARKER°¸°±° 	CP	(HL)°¸°±µ 	EX	DE,HL°¸°²° 	JR	Z,JACK°¸°³µ 	INC	HL°¸°´° 	JR	HERE°¸°µ° JACK	LD	BC,4°¸°¶° 	POP	DE°¸°·° 	LD	HL,TEMP°¸°¸° 	LDIR°¸°¹° 	EX	DE,HL°¸±°° 	LD	(HL),0DH°¸±±° 	RET°¸±²° NEWIN	LD	HL,ER1°¸±³° 	CALL	PRINT1°¸±´° 	JR	CON2°¸±µ° ;  **********		1. PRINTS @ HL°¸±¶° ;  ** LSUB **		2. THEN PRINTS IT'S°¸±·° ;  **********		  ASSOSIATED TEXT.°¸±·µ ;			3. ON ENTRY DE= POS. OF CODE°¸±¸° LSUB	EX	DE,HL		;SAVE HL & PRINT°¸±¹° 	CALL	PRINT1		;ITEM IN DE°¸²°° 	EX	DE,HL		;GET BACK HL°¸²°µ 	INC	HL°¸²±° 	CALL	PRINT1°¸²²° 	RET°¸²³° ;CON3	PRINT "A" AS A DEC°¸²´° CON3	LD	C,A		;SAVE TWO HEX DIGETS°¸²µ° 	SRL	A		;ALIGN HIGH DIGET°¸²¶° 	SRL	A°¸²·° 	SRL	A°¸²¸° 	SRL	A°¸²¹° 	CALL	TEST		;CONVERT TO ASCII°¸³°° 	LD	A,C		;RESTORE ORIGINAL°¸³±° 	AND	0FH		;GET LOW DIGET°¸³²° 	CALL	TEST°¸³³° 	RET°¸³´° TEST	ADD	A,30H		;CONVERSION FACTOR°¸³µ° 	CP	3AH		;TEST FOR 0-9°¸³¶° 	JP	M,TEST1		;GO IF 0-9°¸³·° 	ADD	A,7		;CORECTION FOR A-F°¸³¸° TEST1	CALL	33H°¸³¹° 	RET°¸´°° ;DELAY ROUTINE°¸´±° TIME	PUSH	BC°¸´²° 	LD	BC,0080H°¸´³° TLP	DEC	B°¸´´° 	JR	NZ,TLP°¸´µ° 	DEC	C°¸´¶° 	JR	NZ,TLP°¸´·° 	POP	BC°¸´¸° 	RET°¸´¹° ;RSUB  PRINTS "RET" IF IT IS NESSASERY°¸µ°° RSUB	LD	A,(HL)°¸µ±° 	BIT	7,A°¸µ²° 	RET	Z°¸µ²µ 	LD	A,10°¸µ²· 	CALL	33H		;LINE FEED°¸µ³° 	PUSH	HL°¸µ´° 	LD	HL,RTN°¸µµ° 	CALL	PRINT1°¸µ¶° 	POP	HL°¸µ·° 	RET°¸µ·± ;CHK1		CHECKS IF A IS P:RET OR N:RET°¸µ·µ CHK1	LD	A,(HL)°¸µ¸° 	CP	10H		;P:RET°¸µ¹° 	JR	NZ,HIC°¸¶°° 	PUSH	HL°¸¶±° 	LD	HL,PR°¸¶²° 	CALL	PRINT1°¸¶³° 	POP	HL°¸¶´° 	LD	A,0°¸¶µ° 	OR	A		;SET	ZERO FLAG°¸¶¶° 	RET°¸¶·° HIC	CP	11H		;N:RET°¸¶¸° 	RET	NZ°¸¶¹° 	PUSH	HL°¸·°° 	LD	HL,NR°¸·±° 	CALL	PRINT1°¸·²° 	POP	HL°¸·³° 	LD	A,0°¸·´° 	OR	A		;SET ZERO FLAG°¸·µ° 	RET°¸·¸° ;OOPS	CHECKS FOR IN+N$,IN-N$,RM+N$,RM-N$°¸·¹° 	LD	HL,°¹°°° BUFFER	DEFS	128D°¹¹¹¹ TEMP	DEFS	4D±°°°° VB	DEFM	'VB:'±°°±° 	DEFB	00±°°²° TY	DEFM	'TY:'±°°³° 	DEFB	00±°°´° RTN	DEFM	'RET'±°°µ° 	DEFB	00±°°¶° CP1	DEFM	'CP N$:'±°°·° 	DEFB	00±°°¸° CP2	DEFM	'CP I$:'±°°¹° 	DEFB	00±°±°° CP3	DEFM	'CP I$:N$'±°±±° 	DEFB	00±°±²° CP4	DEFM	'CP R$:'±°±³° 	DEFB	00±°±´° CP5	DEFM	'CP R$:N$'±°±µ° 	DEFB	00±°±¶° INP	DEFM	'IN+'±°±·° 	DEFB	00±°±¸° INM	DEFM	'IN-'±°±¹° 	DEFB	00±°²°° RMP	DEFM	'RM+'±°²±° 	DEFB	00±°²²° RMM	DEFM	'RM-'±°²³° 	DEFB	00±°²´° POS	DEFM	'P:'±°²µ° 	DEFB	00±°²¶° NEG	DEFM	'N:'±°²·° 	DEFB	00±°²¸° JMP	DEFM	'JP:'±°²¹° 	DEFB	00±°³°° RME	DEFM	'RM='±°³±° 	DEFB	00±°³²° RMS	DEFM	'?RM='±°³³° 	DEFB	00±°³´° ER1	DEFM	'ILLEGAL COMAND'±°³µ° 	DEFW	0010±°³¶° DATA	DEFM	'DATA'±°³·° 	DEFB	00±°³¸° LIST	DEFM	'LIST'±°³¹° 	DEFB	00±°´°° PLIST	DEFM	'LLIST'±°´±° 	DEFB	00±°´²° INTRO	DEFM	'ADVENTURE INTERPRETER    VER. 2.0'±°´³° 	DEFB	10±°´´° 	DEFM	'BY ANTHONY WOOD   AUGUST 1981'±°´µ° 	DEFW	0010±°´¶° ED	DEFM	'EDIT'±°´·° 	DEFB	00±°´¸° HOW	DEFM	'WHAT ROOM NUMBER? '±°´¹° 	DEFB	00±°´¹² ENT	DEFM	'ENTER DATA:'±°´¹´ 	DEFW	0010±°´¹µ PR	DEFM	'P:RET'±°´¹¶ 	DEFB	00±°´¹· NR	DEFM	'N:RET'±°´¹¸ 	DEFB	00±¹¹¹° POINT	DEFW	PRO±¹¹¹µ POINT2	DEFW	PRO±¹¹¹¹ PRO	DEFB	0FFH²°°°° 	END	8000H                                                            