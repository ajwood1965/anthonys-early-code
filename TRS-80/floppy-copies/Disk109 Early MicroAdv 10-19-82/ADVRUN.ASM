ÓADVRUN°°±°° ;********************************°°±±° ;**   ADVENTURE RUN PROGRAM    **°°±²° ;********************************°°±³° ;°°±´° ;  (C) 1981 BY ANTHONY WOOD°°±µ° ;°°±¶° 	ORG	6000H°°±¶µ 	DI°°±·° 	CALL	01C9H°°±¹° 	LD	HL,INTRO°°²°° 	CALL	PRINT°°²±° 	CALL	INPUT°°²²° 	CALL	01C9H°°²²² 	LD	A,0EH		;TURN ON CURSOR°°²²´ 	CALL	33H°°²³° ;PRINT DESCRIPTION OF CURRENT ROOM°°²´° BEGIN	LD	HL,LINE		;LINE IS "----"°°²µ° 	CALL	PRINT		;PRINT LINE°°²µµ 	LD	A,(RM)		;CURRENT ROOM NUMBER°°²¶° 	CALL	RMFIND		;RET. ROOM POS. IN TABLE°°²·° 	CALL	PRINT		;PRINT ROOM DESCRIPTION°°²·² 	LD	A,10D°°²·´ 	CALL	33H		;PRINT LINE FEED°°²¸° 	INC	HL		;POINT TO ROOM TO NORTH°°²¹° 	LD	(NSEW),HL	;SAVE NSEW POSITIONS°°²¹µ 	LD	DE,04D°°³°° 	ADD	HL,DE		;POINT TO ITEMS IN ROOM°°³±° 	LD	A,(HL)°°³²° 	CP	0CCH		;CC IS END MARKER°°³³° 	JR	Z,SKIP°°³³µ 	PUSH	HL°°³´° 	LD	HL,EXIT		;PRINT: ITEMS I SEE°°³µ° 	CALL	PRINT		;ARE:°°³µµ 	POP	HL°°³¶° LOOPY	LD	A,(HL)		;GET CURENT ITEM°°³·° 	CP	0CCH		;LAST ITEM?°°³¸° 	JR	Z,SKIP		;IF YES, GO°°³¹° 	PUSH	HL		;SAVE HL°°´°° 	CALL	TABSRH		;FIND "A" IN MEM.°°´±° 	CALL	PRINT		;PRINT IT°°´²° 	LD	A,'.'		;PRINT A°°´³° 	CALL	33H		;PERIOD.°°´´° 	POP	HL		;RESTORE HL°°´µ° 	INC	HL		;POINT TO NEXT ITEM°°´¶° 	JR	LOOPY°°´¶² SKIP	LD	A,10D°°´¶´ 	CALL	33H		;LINE FEED°°´·° 	LD	HL,OBEX	;PRINT: OVIOUS°°´¸° 	CALL	PRINT		;EXITS ARE:°°´¹° 	LD	HL,(NSEW)		;POINT TO EXITS°°µ°° 	LD	A,0°°µ±° 	CP	(HL)°°µ²° 	JR	Z,NEXT1		;NOT NORTH°°µ³° 	PUSH	HL		;SAVE°°µ´° 	LD	HL,NORTH°°µµ° 	CALL	PRINT		;PRINT NORTH°°µ¶° 	POP	HL°°µ·° 	LD	A,'.'°°µ¸° 	CALL	33H		;PRINT "."°°µ¹° NEXT1	INC	HL		;POINT TO SOUTH°°¶°° 	LD	A,0°°¶±° 	CP	(HL)		;SOUTH?°°¶²° 	JR	Z,NEXT2°°¶³° 	PUSH	HL°°¶´° 	LD	HL,SOUTH°°¶µ° 	CALL	PRINT°°¶¶° 	POP	HL°°¶·° 	LD	A,'.'°°¶¸° 	CALL	33H°°¶¹° NEXT2	INC	HL		;POINT TO EAST°°·°° 	LD	A,0°°·±° 	CP	(HL)°°·²° 	JR	Z,NEXT3°°·³° 	PUSH	HL°°·´° 	LD	HL,EAST°°·µ° 	CALL	PRINT°°·¶° 	POP	HL°°··° 	LD	A,'.'°°·¸° 	CALL	33H°°·¹° NEXT3	INC	HL		;POINT TO WEST°°¸°° 	LD	A,0°°¸±° 	CP	(HL)°°¸²° 	JR	Z,NEXT4°°¸³° 	LD	HL,WEST°°¸´° 	CALL	PRINT°°¸µ° NEXT4	LD	A,10D°°¸¶° 	CALL	33H		;LINE FEED°°¸·° INP	LD	HL,DO		;TELL ME WHAT TO DO°°¸¸° 	CALL	PRINT°°¸¹° 	CALL	INPUT		;GET INPUT°°¸¹± 	LD	DE,BUFFER°°¸¹² 	LD	HL,TORY		;INVENTORY°°¸¹³ 	CALL	CMPR°°¸¹´ 	CALL	Z,DISP°°¸¹¶ 	JR	Z,INP°°¹°° 	LD	HL,BUFFER+1°°¹±° 	LD	A,0DH		;CR°°¹²° 	CP	(HL)		;IS IT A 1 LETTER INPUT?°°¹³° 	JR	NZ,NOPE		;IF NOT, SKIP NEXT PART°°¹³² 	DEC	HL		;POINT TO LETTER°°¹³µ 	LD	IX,(NSEW)		;POINTS TO NSEW POS'NS°°¹´° 	LD	A,'N'°°¹µ° 	CP	(HL)		;IS IT NORTH?°°¹¶° 	JR	NZ,SOU1°°¹¸° 	LD	A,(IX+0)°°¹¹° 	LD	(RM),A°±°°° 	JP	BEGIN		;GO BACK TO PRINT ROOM°±°±° SOU1	LD	A,'S'°±°²° 	CP	(HL)		;IS IT SOUTH?°±°³° 	JR	NZ,EAS1°±°µ° 	LD	A,(IX+1)°±°¶° 	LD	(RM),A°±°·° 	JP	BEGIN°±°¸° EAS1	LD	A,'E'°±°¹° 	CP	(HL)		;IS IT EAST?°±±°° 	JR	NZ,WES1°±±²° 	LD	A,(IX+2)°±±³° 	LD	(RM),A°±±´° 	JP	BEGIN°±±µ° WES1	LD	A,'W'		;IS IT WEST?°±±µµ 	CP	(HL)°±±¶° 	JR	NZ,ERR°±±¸° 	LD	A,(IX+3)°±±¹° 	LD	(RM),A°±²°° 	JP	BEGIN°±²±° ERR	LD	HL,HUH		;PRINT HUH?°±²²° 	CALL	PRINT°±²³° 	JP	INP°±²´° ;THE FOLOWING FINDS THE NOUN (IF THERE IS ONE)°±²µ° NOPE	LD	A,20H		;SPACE°±²¶° 	LD	BC,64D		;SEARCH BUFFER°±²·° 	LD	HL,BUFFER	;START SEARCH AT BUFER°±²¸° 	CPIR			;FIND SPACE+1°±²¹° 	LD	(NOUN),HL	;SAVE IN MEMORY°±³°° ;THE FOLOWING ACTUALLY "RUNS" THE "SUB PROGRAM"°±³±° 	LD	HL,0C000H	;POINT IS THE CURRENT°±³²° 	LD	(POINT),HL	;POS TO BE RUN°±³³° START	LD	HL,(POINT)°±³´° 	LD	A,(HL)		;GET COMAND°±³´± 	BIT	5,A		;P BIT SET?°±³´² 	JR	NZ,PTEST°±³´³ 	BIT	6,A		;IS N BIT SET?°±³´´ 	JR	NZ,NTEST°±³´µ 	JR	CONT°±³´¶ PTEST	LD	A,(PN)		;GET POS-NEG FLAG°±³´· 	CP	01		;IS IT SET?°±³´¸ 	JR	Z,CONT		;CONT IF YES°±³´¹ 	JR	FIG		;IF SO, SKIP THIS COMAND°±³µ° NTEST	LD	A,(PN)		;GET POS-NEG FLAG°±³µ± 	CP	00		;IS NEG FLAG SET?°±³µ² 	JR	Z,CONT		;YES... CONTINUE°±³µ³ FIG	CALL	COM		;SKIP THIS°±³µ´ 	JR	START°±³µ¶ CONT	LD	A,(HL)°±³¶° 	RES	5,A°±³¶² 	RES	6,A°±³·µ 	CP	01		;IS IT TY?°±³·¶ 	JR	NZ,RTN		;IF NOT, GO VERB°±³·· 	INC	HL		;POINT TO ITEM TO TY°±³¸° 	LD	A,(HL)°±³¸µ 	PUSH	HL		;SAVE°±³¹° 	CALL	TABSRH		;FIND THIS IN MEM°±´°° 	CALL	PRINT		;PRINT IT°±´°µ 	POP	HL°±´°¶ 	LD	A,10°±´°¸ 	CALL	33H		;PRINT LINE FEED°±´±° 	INC	HL		;POINT TO NEXT COMAND°±´²° 	LD	(POINT),HL	;SAVE°±´³° 	JR	START		;GO BACK°±´´° RTN	CP	16H		;IS IT A "RET"?°±´µ° 	JP	Z,INP		;YES.. GO TO INP°±´¶° 	CP	00		;IS IT VERB?°±´·° 	JR	NZ,CMP1°±´¸° RECHK	INC	HL		;POINT TO VERB°±´¹° 	LD	A,(HL)		;GET VERB #°±µ°° 	CP	0FDH		;END OF VERB MARKER°±µ±° 	JR	Z,NXTVB	;IF LAST, GO°±µ±µ 	PUSH	HL		;SAVE°±µ²° 	CALL	TABSRH		;GET VERB IN HL°±µ³° 	LD	DE,BUFFER	;POINT TO INP VRB°±µ´° 	CALL	CMPR		;COMPARE°±µ´µ 	POP	HL		;RESTORE°±µµ° 	JR	NZ,RECHK	;IF NOT, KEEP COMPARING°±µ¶° 	LD	BC,00		;SEARCH 64K°±µ·° 	LD	A,0FDH		;END OF VRB LIST°±µ¸° 	CPIR			;SERCH FOR IT°±µ¹° 	LD	(POINT),HL	;SAVE°±¶°° 	JR	START°±¶²° NXTVB	LD	A,(HL)		;GET NEXT CHR°±¶³° 	CP	00°±¶´° 	JR	Z,RECHK		;IF YES, CHECK IT°±¶µ° 	CP	0FFH		;END OF PROGRAM?°±¶¶° 	JR	Z,ERROR°±¶·° 	INC	HL°±¶¸° 	JR	NXTVB°±¶¹° ERROR	LD	HL,DUMB		;PRINT:°±·°° 	CALL	PRINT		;I DONT UNDERSTAND°±·±° 	JP	INP°±·²° CMP1	CP	02		;CP N$:XXX°±·³° 	JR	NZ,CMP2°±·´° 	INC	HL°±·µ° 	LD	A,(HL)		;GET ITEM TO COMPARE°±·µµ 	PUSH	HL°±·¶° 	CALL	TABSRH		;FIND IT IN MEM°±··° 	LD	DE,(NOUN)°±·¸° 	CALL	CMPR°±·¸µ 	POP	HL°±·¹° 	JR	Z,POST°±¸°° 	LD	A,0°±¸±° 	LD	(PN),A°±¸²° 	JR	VINT°±¸³° POST	LD	A,01°±¸´° 	LD	(PN),A°±¸µ° VINT	INC	HL°±¸¶° 	LD	(POINT),HL°±¸·° 	JP	START°±¸¸° CMP2	CP	03D		;CP I$:XXX°±¸¹° 	JR	NZ,CMP3°±¹°° 	LD	DE,INVENT	;INVENTORY POSSITION°±¹°µ 	INC	HL		;POINT TO ITEM TO CMP°±¹±° INLP	LD	A,(DE)		;GET CURRENT ITEM°±¹²° 	CP	0FFH		;IS IT FFH?°±¹³° 	JR	Z,INAL°±¹´° 	CP	(HL)		;ITEM TO SEE°±¹µ° 	JR	Z,FOND°±¹¶° 	INC	DE°±¹·° 	JR	INLP°±¹¸° FOND	LD	A,01		;POSITVE°±¹¹° 	LD	(PN),A°²°°° 	INC	HL°²°±° 	LD	(POINT),HL°²°²° 	JP	START°²°³° INAL	LD	A,00		;NEGATIVE°²°´° 	LD	(PN),A°²°µ° 	INC	HL°²°¶° 	LD	(POINT),HL°²°·° 	JP	START°²°¸° CMP3	CP	04°²°¹° 	JR	NZ,CMP4°²±°° 	INC	HL		;POINT TO NEXT COMAND°²±±° 	LD	(POINT),HL	;SAVE COMAND°²±²° 	LD	DE,(NOUN)	;GET NOUN POSITION°²±³° 	LD	BC,INVENT	;INVENTORY STRT POS°²±´° COWY	LD	A,(BC)		;GET INVENTORY ITEM°²±µ° 	CP	0FFH		;END MARKER°²±¶° 	JR	Z,LEGG		;NEGATIVE (PN)°²±¶µ 	PUSH	BC		;SAVEE BC°²±·° 	CALL	TABSRH		;FIND ITS DTRING°²±¸° 	CALL	CMPR		;COMPARE NOUTN TO HL°²±¸µ 	POP	BC		;RESTORE°²±¹° 	JR	Z,PIG		;FOUND!°²²°° 	LD	DE,(NOUN)	;GET ITEM (CHANGE THIS!)°²²±° 	INC	BC		;POINT TO NEXT°²²²° 	JR	COWY°²²³° LEGG	LD	A,0°²²´° 	LD	(PN),A°²²µ° 	JP	START°²²¶° PIG	LD	A,01°²²·° 	LD	(PN),A°²²¸° 	JP	START°²²¹° CMP4	CP	05		;CP R$:XXX°²³°° 	JR	NZ,VENT		;JP IN+°²³±° 	LD	A,(RM)		;GET CURRENT ROOM #°²³²° 	CALL	RMFIND		;FIND THAT ROM #°²³³° 	LD	BC,00°²³´° 	LD	A,0DH		;FIND CR°²³µ° 	CPIR			;FIND DESCRIPTIONS+1°²³¶° 	INC	HL°²³·° 	INC	HL°²³¸° 	INC	HL		;POINT TO ITEMS IN ROM°²³¹° 	INC	HL°²³¹µ 	LD	DE,(NOUN)°²´°° MORN	LD	A,(HL)		;GET WORD°²´±° 	CP	0CCH		;END OF ROOM MARKER°²´²° 	JR	Z,HICUP		;NEGATIVE°²´³° 	PUSH	HL		;SAVE°²´´° 	CALL	TABSRH°²´µ° 	CALL	CMPR		;IS IT =?°²´¶° 	JR	Z,HICYES	;POSITINCE°²´·° 	POP	HL°²´¸° 	INC	HL°²´¹° 	JR	MORN°²µ°° HICUP	LD	A,00		;NEG°²µ±° 	LD	(PN),A°²µ²° 	LD	HL,(POINT)°²µ³° 	CALL	COM°²µ´° 	LD	(POINT),HL°²µµ° 	JP	START°²µ¶° HICYES	LD	A,01°²µ·° 	LD	(PN),A°²µ¸° 	LD	HL,(POINT)°²µ¹° 	CALL	COM°²¶°° 	LD	(POINT),HL°²¶±° 	JP	START°²¶²° VENT	CP	06D		;CP R$:N$°²¶²µ 	JR	NZ,VENT2°²¶³° 	INC	HL		;POINT TO NEXT COMMAND°²¶´° 	LD	(POINT),HL	;SAVE°²¶µ° 	LD	DE,(NOUN)	;GET NOUN°²¶¶° 	LD	A,(RM)°²¶·° 	CALL	RMFIND		;FIND POS OF ROOM°²¶¸° 	LD	BC,00°²¶¹° 	LD	A,0DH		;END OF DESCRIPTION MARK°²·°° 	CPIR			;FIND BEGIN OF NSEW°²·±° 	INC	HL°²·²° 	INC	HL°²·³° 	INC	HL°²·´° 	INC	HL		;POINT TO ITEMS IN ROOM°²·µ° KERMIT	LD	A,(HL)		;GET IT5EM°²·¶° 	CP	0CCH		;END MARKER°²··° 	JR	Z,WRONG		;NEG°²·¸° 	PUSH	HL°²·¹° 	CALL	TABSRH		;FING STRING°²¸°° 	CALL	CMPR		;COMPARE DE L°²¸±° 	POP	HL		;RESTORE°²¸²° 	JR	Z,YESSIR°²¸³° 	INC	HL		;PONIT NEXT°²¸´° 	JR	KERMIT°²¸µ° WRONG	LD	A,0°²¸¶° 	LD	(PN),A°²¸·° 	JP	START°²¸¸° YESSIR	LD	A,01°²¸¹° 	LD	(PN),A°²¹°° 	JP	START°²¹±° VENT2	CP	07H		;IN+°²¹²° 	JR	NZ,VENT3°²¹³° 	INC	HL		;POINT TO ITEM°²¹´° 	LD	D,(HL)		;GET ITEM TO ADD°²¹µ° 	INC	HL		;POINT TO NEXT COMAND°²¹¶° 	LD	(POINT),HL	;SAVE°²¹·° HERE1	LD	HL,INVENT	;INVENORY°²¹¸° 	LD	A,0FFH		;END OF INVENTORY MARKER°²¹¹° 	LD	BC,00		;SEARCH 64K°³°°° 	CPIR			;FIND END°³°±° 	LD	(HL),0FFH	;NEW END°³°²° 	DEC	HL°³°³° 	LD	(HL),D		;SAVE°³°´° 	JP	START°³°µ° VENT3	CP	08H		;IN-°³°¶° 	JR	NZ,VENT4°³°·° 	INC	HL		;POINT TO ITEM TO FIND°³°¸° 	LD	D,(HL)		;GET ITEM TO FIND°³°¹° 	INC	HL		;POINT TO NEXT COMAND°³±°° 	LD	(POINT),HL	;SAVE°³±±° HERE2	LD	HL,INVENT	;POINT TO INVENTORY°³±²° HIT	LD	A,(HL)		;GET CURRENT ITEM°³±³° 	CP	D		;RIGHT ITEM?°³±´° 	JR	Z,PINT°³±µ° 	CP	0FFH		;END MARKER°³±¶° 	JP	Z,START		;IF SO, JUST SKIP COMAND°³±·° 	INC	HL		;POINT TO NEXT ITEM°³±¸° 	JR	HIT°³±¹° PINT	PUSH	HL°³²°° 	POP	IX		;PUT HL IN IX°³²±° PINT2	LD	A,(IX+1)°³²²° 	LD	(IX+0),A°³²³° 	CP	0FFH°³²´° 	JP	Z,START°³²µ° 	INC	IX°³²¶° 	JR	PINT2°³²·° VENT4	CP	09H		;RM+°³²¸° 	JR	NZ,VENT5°³²¸² 	INC	HL		;POINT TO ITEM TO ADD°³²¸´ 	LD	D,(HL)°³²¸¶ 	INC	HL		;POINT TO NEXT COMAND°³²¸¸ 	LD	(POINT),HL°³²¹° HERE3	LD	A,(RM)		;GET CURRENT ROOM°³³°° 	CALL	RMFIND		;FIND ROOM IN HL°³³±° 	LD	BC,00°³³²° 	LD	A,0DH°³³³° 	CPIR			;FIND END OF TEXT+1°³³´° 	INC	HL°³³µ° 	INC	HL°³³¶° 	INC	HL°³³·° 	INC	HL		;SKIP NSEW°³³¸° 	LD	B,D		;SAVE ITEM TO ADD°³³¹° 	PUSH	HL°³´°° 	POP	DE°³´±° 	CALL	MOVD		;MOVE MEMORY DOWN 1 BYTE°³´²° 	LD	(HL),B		;SAVE°³´³° 	JP	START°³´´° VENT5	CP	0AH		;RM-°³´µ° 	JR	NZ,VENT6°³´¶° 	INC	HL		;POINT TO ITEM IN ROOM°³´·° 	LD	E,(HL)°³´¸° 	INC	HL		;NEXT COMAND°³´¹° 	LD	(POINT),HL	;SAVE°³µ°° HERE4	LD	A,(RM)°³µ±° 	CALL	RMFIND		;POINT TO ROOM DATA°³µ²° 	LD	A,0DH°³µ³° 	LD	BC,00°³µ´° 	CPIR			;POINT TO END OF TEXT+1°³µµ° 	INC	HL°³µ¶° 	INC	HL°³µ·° 	INC	HL°³µ¸° 	INC	HL		;POINT TO ITEMS IN RM°³µ¹° FIG1	LD	A,(HL)°³¶°° 	CP	0CCH°³¶±° 	JP	Z,START		;ERROR... GO BACK°³¶²° 	CP	E		;ITEM TO DELETE°³¶³° 	JR	Z,FIG2°³¶´° 	INC	HL°³¶µ° 	JR	FIG1°³¶¶° FIG2	PUSH	HL°³¶·° 	POP	IX°³¶¸° 	CALL	MOVU°³¶¹° 	JP	START°³·°° VENT6	CP	0CH		;RM=XX°³·±° 	JR	NZ,VENT7°³·²° 	INC	HL°³·³° 	LD	A,(HL)°³·´° 	LD	(RM),A°³·µ° 	JP	BEGIN°³·¶° VENT7	CP	0DH		;?RM=XX°³··° 	JR	NZ,VENT8°³·¸° 	INC	HL°³·¹° 	LD	A,(HL)°³¸°° 	INC	HL		;POINT TO NEXT COMAND°³¸±° 	LD	(POINT),HL°³¸±µ 	LD	HL,RM°³¸²° 	CP	(HL)		;CMPR ROOMS°³¸³° 	JR	Z,HICK°³¸´° 	LD	A,00°³¸µ° 	LD	(PN),A		;NEG°³¸¶° 	JP	START°³¸·° HICK	LD	A,01°³¸¸° 	LD	(PN),A		;POS°³¸¹° 	JP	START°³¹°° VENT8	CP	12H		;IN+N$°³¹±° 	JR	NZ,VENT9°³¹²° 	INC	HL°³¹³° 	LD	(POINT),HL°³¹´° 	CALL	STRFD°´°°° 	LD	D,A°´°±° 	JP	HERE1°´°²° VENT9	CP	13H		;IN-N$°´°³° 	JR	NZ,POP1°´°³³ 	INC	HL°´°³¶ 	LD	(POINT),HL°´°³¹ 	CALL	STRFD°´°´² 	LD	D,A°´°´µ 	JP	HERE2°´°´¸ POP1	CP	14H		;RM+N$°´°µ± 	JR	NZ,POP2°´°µ´ 	INC	HL°´°µ· 	LD	(POINT),HL°´°¶° 	CALL	STRFD°´°¶³ 	LD	D,A°´°¶¶ 	JP	HERE3°´°¶¹ POP2	CP	15H		;RM-N$°´°·² 	JP	NZ,START°´°·µ 	INC	HL°´°·¸ 	LD	(POINT),HL°´°¹° 	CALL	STRFD°´±°° 	LD	E,A°´±±° 	JP	HERE4°·°±° ;SAVES INPUT AT "BUFFER"°·°²° INPUT	PUSH	HL°·°³° 	PUSH	DE°·°´° 	PUSH	AF°·°´µ 	LD	HL,BUFFER°·°µ° LOP	CALL	2BH°·°¶° 	OR	A°·°·° 	JR	Z,LOP°·°¸° 	CP	08H		;BACKSPACE?°·°¹° 	JR	Z,BACK°·°¹µ 	CALL	33H°·±°° 	LD	(HL),A		;SAVE IN BUFFER°·±±° 	CP	0DH		;ENTER?°·±²° 	JR	Z,FFIN°·±³° 	INC	HL°·±´° 	JR	LOP°·±µ° BACK	CALL	33H		;PRINT BACK SPACE°·±¶° 	DEC	HL		;BACK UP BUFFER°·±·° 	JR	LOP°·±¸° FFIN	POP	AF°·±¹° 	POP	DE°·²°° 	POP	HL°·²±° 	RET			;RESTORE REGS, AND GO°·²²° PRINT	LD	A,(HL)°·²³° 	CP	0DH		;CR?°·²´° 	RET	Z°·²µ° 	CALL	33H		;PRINT CHAR..°·²¶° 	INC	HL		;POINT TO NEXT CHR.°·²·° 	JR	PRINT°·²¸° ;RMFIND °·²¹° ;	-------> FINDS ROOM #A°·³°° ;	-------> RETURNS ITS POSITION IN "HL"°·³±° RMFIND	PUSH	DE°·³²° 	PUSH	BC		;SAVE REGS°·³²µ 	PUSH	AF°·³³° 	LD	HL,0C000H	;PROGRAM START POS.°·³´° 	LD	A,0EEH		;START OF ROOM DESCRIP.°·³µ° 	LD	BC,00		;SEARCH 64K°·³¶° 	CPIR			;FIND EE+1°·³·° 	POP	AF		;GET ROOM TO FIND°·³¸° LOOP	LD	D,(HL)		;GET CURRENT ROOM #°·³¹° 	CP	D°·´°° 	JR	Z,YEA		;IF RIGHT ROOM, RET°·´±° 	EX	AF,AF'		;SAVE ROOM TO FIND°·´²° 	LD	A,0CCH		;ROOM MARKERS°·´³° 	CPIR			;FIND IT°·´¶° 	EX	AF,AF'		;GET BACK ROOM°·´·° 	JR	LOOP°·´¸° YEA	INC	HL		;POINT TO ROOM TEXT°·´¹° 	POP	BC°·µ°° 	POP	DE°·µ±° 	RET°·µ²° ;TABSRH°·µ³° ;FIND ITEM "A" IN "ITEM TABLE"°·µ´° ;ITEM TABLE IS PRECEDED BY A "FFH"°·µµ° ;°·µ¶° TABSRH	PUSH	DE°·µ·° 	PUSH	BC°·µ·µ 	EX	AF,AF'°·µ¸° 	LD	HL,0C000H	;START OF PROGRAM°·µ¹° 	LD	BC,00		;SEARCH 64K°·¶°° 	LD	A,0FFH		;TABLE MARKER°·¶±° 	CPIR			;FIND TABLE°·¶²° 	EX	AF,AF'°·¶³° 	LD	D,A		;SAVE°·¶´° TBLOP	DEC	D°·¶µ° 	LD	A,00°·¶¶° 	CP	D		;FOUND IT?°·¶·° 	JR	Z,FIT		;YES... GO FIT°·¶¸° 	LD	A,0DH		;BEGINING OF NEXT PTR°·¶¹° 	CPIR			;FIND IT°··°° 	JR	TBLOP°··±° FIT	POP	BC°··²° 	POP	DE°··³° 	RET°··µ° ;COMPARE°··¶° ;COMPARES STRING AT HL TO STRING AT DE°···° ;HL MUST BE FOLLOWED BY A ZERO OR CR, NOT NESSESARY DE°··¸° ;COMPARES A MAX OF 4 CHRS°··¹° CMPR	CALL	LEN		;GET LEN OF HL°·¸²° 	LD	A,4		;ITEM TO COMPARE°·¸³° 	CP	C		;COMPARE LEN TO 4°·¸´° 	JR	NC,CMPR2	;GO IF BC IS LESS THAN 4°·¸µ° 	LD	BC,4		;COMPARE ONLY 4 CHRS°·¸¶° CMPR2	LD	A,(DE)		;GET CURRENT CHAR°·¸·° 	CP	(HL)		;CMPR WITH THE SECOND CHR°·¸¸° 	JR	NZ,BAD°·¸¹° 	INC	HL°·¹°° 	INC	DE		;BUMP	POINTERS°·¹±° 	DEC	BC°·¹²° 	LD	A,0°·¹³° 	CP	B°·¹´° 	JR	NZ,CMPR2°·¹µ° 	CP	C°·¹¶° 	JR	NZ,CMPR2°·¹·° GOOD	LD	A,0°·¹¸° 	OR	A°·¹¹° 	RET°¸°°° BAD	LD	A,0FFH°¸°±° 	OR	A°¸°²° 	RET°¸°³° ;LENGTH°¸°´° ;ON RET: BC=LENGTH OF STRING AT HL°¸°µ° LEN	PUSH	HL		;SAVE°¸°¶° 	LD	C,0°¸°·° 	LD	B,0		;CLEAR BC°¸°¸° LOG	LD	A,0°¸°¹° 	CP	(HL)°¸±°° 	JR	Z,LFIN°¸±±° 	LD	A,0DH°¸±²° 	CP	(HL)°¸±³° 	JR	Z,LFIN°¸±´° 	INC	HL°¸±µ° 	INC	BC°¸±¶° 	JR	LOG°¸±·° LFIN	POP	HL°¸±¸° 	RET°¸±¹° ;<COM>AND°¸²°° ;LOADS (POINT) WITH THE NEXT COMAND LOCATION°¸²±° ; "A" MUST CONTAIN CURRENT COMAND, AND "HL" CURENT LOC.°¸²³° COM	PUSH	BC		;SAVE°¸²³± 	LD	A,(HL)		;GET COMAND!°¸²³² 	RES	5,A		;CLEAR P°¸²³´ 	RES	6,A		;CLEAR N°¸²´° 	CP	16H°¸²µ° 	JR	Z,ONE		;RET°¸²¶° 	CP	04		;CP I$:N$°¸²·° 	JR	Z,ONE°¸²¸° 	CP	06D		;CP R$:N$°¸²¹° 	JR	Z,ONE°¸³°° 	CP	45D		;N:RET°¸³±° 	JR	Z,ONE°¸³²° 	CP	86D		;P:RET°¸³³° 	JR	Z,ONE°¸³´° 	CP	01		;TY°¸³µ° 	JR	Z,TWO°¸³¶° 	CP	02		;CP N$:XXX°¸³·° 	JR	Z,TWO°¸³¸° 	CP	03		;CP I$:XXX°¸³¹° 	JR	Z,TWO°¸´°° 	CP	05		;CP R$:XXX°¸´±° 	JR	Z,TWO°¸´²° 	CP	07D		;IN+°¸´³° 	JR	Z,TWO°¸´´° 	CP	08D		;IN-°¸´µ° 	JR	Z,TWO°¸´¶° 	CP	09		;RM+°¸´·° 	JR	Z,TWO°¸´¸° 	CP	0AH		;RM-°¸´¹° 	JR	Z,TWO°¸µ°° 	CP	0BH		;JP:XX°¸µ±° 	JR	Z,TWO°¸µ²° 	CP	0CH		;RM=°¸µ³° 	JR	Z,TWO°¸µ´° 	CP	0DH		;?RM=°¸µµ° 	JR	Z,TWO°¸µ¶° 	CP	0EH		;*#°¸µ·° 	JR	Z,TWO°¸µ¸° 	CP	12H		;IN+N$°¸µ¹° 	JR	Z,ONE°¸¶°° 	CP	13H		;IN-N$°¸¶±° 	JR	Z,ONE°¸¶²° 	CP	14H		;RM+N$°¸¶³° 	JR	Z,ONE°¸¶´° 	CP	15H		;RM-N$°¸¶µ° 	JR	Z,ONE°¸¶¶° 	LD	A,0FDH		;MUST BE VARIABLE°¸¶·° 	LD	BC,00		;SEARCH 64K°¸¶¸° 	CPIR			;FIND NEXT COMAND°¸¶¹° 	LD	(POINT),HL°¸·°° 	JR	ALMOST°¸·±° TWO	INC	HL°¸·²° ONE	INC	HL°¸·³° 	LD	(POINT),HL	;SAVE°¸·µ° ALMOST	POP	BC°¸·¶° 	RET°¸·¶± ;DISP	DISPLAYES INVENTORY°¸·¶² DISP	PUSH	AF		;SAVE°¸·¶³ 	LD	BC,INVENT°¸·¶´ 	LD	A,(BC)°¸·¶µ 	CP	0FFH		;NO ITEMS IN INVE°¸·¶¶ 	JR	NZ,MARS°¸·¶· 	LD	HL,CARRY	;PRINT NOT CARRYING°¸·¶¸ 	CALL	PRINT		;ANYTHING°¸·¶¹ 	POP	AF°¸··° 	RET°¸··± MARS	LD	A,(BC)		;GET ITEM°¸··² 	CP	0FFH		;END?°¸··³ 	JR	Z,VENUS°¸··´ 	CALL	TABSRH		;FIND ITEM°¸··µ 	CALL	PRINT°¸··¶ 	LD	A,'.'°¸··· 	CALL	33H°¸·¸° 	INC	BC°¸·¹° 	JR	MARS°¸¸±° VENUS	LD	A,10D°¸¸²° 	CALL	33H°¸¸³° 	POP	AF°¸¸´° 	RET°¸¸µ° ;MOVES PROGRAM DOWN 1 BYTE°¸¸¶° ;LAST BYE MOVED IS AT THE ADDRESS IN "DE"°¸¸·° MOVD	PUSH	HL°¸¸¸° 	PUSH	BC°¸¸¸µ 	PUSH	DE°¸¸¹° 	PUSH	DE		;PUT DE IN HL°¸¹°° 	POP	HL°¸¹±° 	LD	A,0FFH		;END MARKER°¸¹²° 	LD	BC,00°¸¹³° 	CPIR			;FIND°¸¹´° 	PUSH	HL		;MOVE HL TO IX°¸¹µ° 	POP	IX°¸¹¶° MON	DEC	IX		;POINT TO NEXT BYTE 2 MOV°¸¹·° 	LD	A,(IX+0)	;GET BYTE°¸¹¸° 	LD	(IX+1),A	;MOVE IT DOWN 1 BYTE°¸¹¹° 	XOR	A		;CLEAR CARRY°¹°°° 	PUSH	IX°¹°±° 	POP	HL°¹°²° 	SBC	HL,DE°¹°³° 	JR	NZ,MON°¹°´° 	POP	DE°¹°µ° 	POP	BC°¹°¶° 	POP	HL°¹°·° 	RET°¹°¸° ;MOVU	MOVES MEMORY FORM 'FFH' UP TO (IX)°¹±±° MOVU	LD	A,(IX+1)°¹±²° 	LD	(IX+0),A°¹±³° 	CP	0FFH		;LAS BYTE?°¹±´° 	RET	Z°¹±µ° 	INC	IX°¹±¶° 	JR	MOVU°¹±·° ;STRFD	-STRING FIND°¹±¸° ;FINDS (NOUN)'S NUMBER°¹±¹° STRFD	LD	A,1°¹²°° 	LD	DE,(NOUN)°¹²±° MISS	PUSH	AF		;SAVE A°¹²±µ 	PUSH	DE		;SAVE°¹²²° 	CALL	TABSRH		;FIND STRNG 4 "A"°¹²³° 	CALL	CMPR°¹²³µ 	POP	DE°¹²´° 	JR	Z,MISS2°¹²µ° 	POP	AF°¹²¶° 	INC	A°¹²¶µ 	CP	0FFH		;BAD NOUN°¹²·° 	JR	NZ,MISS°¹²·³ 	LD	HL,HOOP°¹²·¶ 	CALL	PRINT°¹²·¹ 	RET°¹²¸° MISS2	POP	AF°¹²¹° 	RET²°°±° INTRO	DEFM	'QUEST FOR DEATH   VER 1.0'²°°²° 	DEFB	10²°°³° 	DEFM	'BY ANTHONY WOOD'²°°´° 	DEFB	10²°°µ° 	DEFM	' (C) 1981 BY ANTHONY WOOD'²°°¶° 	DEFW	0A0AH²°°·° 	DEFM	'I AM YOUR PUPPET, COMAND ME WITH SIMPLE TWO WORD SENTANCES'²°°·µ 	DEFB	10²°°¸° 	DEFM	'SOME WORDS I KNOW:'²°°¸µ 	DEFB	10²°°¹° 	DEFM	'INVENTORY, LOOK, HELP, SAVE GAME'²°±°° 	DEFB	10²°±±° 	DEFM	'HIT ENTER TO START.'²°±²° 	DEFB	0DH²°±³° LINE	DEFM	'<------------------------------------------------------------->'²°±´° 	DEFB	10²°±´µ 	DEFB	0DH²°±µ° EXIT	DEFM	'I CAN SEE: '²°±¶° 	DEFB	0DH²°±·° OBEX	DEFM	'OBVIOUS EXITS ARE: '²°±¸° 	DEFB	0DH²°±¹° NORTH	DEFM	'NORTH'²°²°° 	DEFB	0DH²°²±° SOUTH	DEFM	'SOUTH'²°²²° 	DEFB	0DH²°²³° EAST	DEFM	'EAST'²°²´° 	DEFB	0DH²°²µ° WEST	DEFM	'WEST'²°²¶° 	DEFB	0DH²°²·° DO	DEFM	'TELL ME WHAT TO DO---->'²°²¸° 	DEFB	0DH²°²¹° NSEW	DEFW	0BBBBH²°³°° RM	DEFB	01D²°³±° BUFFER	DEFS	64D²°³²° HUH	DEFM	'HUH?'²°³²µ 	DEFB	10D²°³³° 	DEFB	0DH²°³´° POINT	DEFW	5555H²°³µ° NOUN	DEFS	2D²°³¶° DUMB	DEFM	'YOUR VERBS DONT MAKE MUCH SENCE.'²°³·° 	DEFB	10²°³¸° 	DEFB	0DH²°³¹° PN	DEFB	01D²°´°° INVENT	DEFB	0FFH		;END MARKER²°´±° 	DEFS	10²°´²° TORY	DEFM	'INVE'²°´³° 	DEFB	0DH²°´´° CARRY	DEFM	'YOU ARE NOT CARRYING ANYTHING'²°´µ° 	DEFB	10²°´¶° 	DEFB	0DH²°´¶³ HOOP	DEFM	'WHAT YOU TALKIN ABOUT SON?'²°´¶¶ 	DEFB	10²°´¶¹ 	DEFB	0DH³°°°° 	END	6000H                                                                     